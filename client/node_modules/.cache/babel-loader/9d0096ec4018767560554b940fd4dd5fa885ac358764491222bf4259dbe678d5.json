{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeremy\\\\Desktop\\\\4DEVS\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport { parse, isValid, format } from \"date-fns\";\nimport { jsPDF } from \"jspdf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [redoublantsFile, setRedoublantsFile] = useState(null); // Nouveau fichier pour les redoublants\n  const [data, setData] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [preinscrits, setPreinscrits] = useState([]);\n  const [preinscritFile, setPreinscritFile] = useState(null);\n  useEffect(() => {\n    fetchClasses();\n    fetchPreinscrits();\n  }, []);\n  const addPreinscrit = e => {\n    const selectedFile = e.target.files[0];\n    setPreinscritFile(selectedFile);\n    sendPreinscritToBackend(selectedFile);\n  };\n\n  // Récupération des classes du backend\n  const fetchClasses = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/classes\");\n      if (response.ok) {\n        const classData = await response.json();\n\n        // Trier les classes dans l'ordre désiré\n        const order = [\"Petite section\", \"Moyenne section\", \"Grande section\", \"CP\", \"CE1\", \"CE2\", \"CM1\", \"CM2\"];\n        const sortedClasses = classData.sort((a, b) => order.indexOf(a.classe) - order.indexOf(b.classe));\n        setClasses(sortedClasses);\n      } else {\n        console.error(\"Erreur lors de la récupération des classes\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion au serveur :\", error);\n    }\n  };\n\n  // Fonction pour archiver l'année scolaire\n  const archiveYear = async () => {\n    try {\n      // Récupérer les classes depuis l'API\n      const response = await fetch(\"http://localhost:5000/api/classes\");\n      if (!response.ok) {\n        console.error(\"Erreur lors de la récupération des classes :\", response.statusText);\n        return;\n      }\n      const classData = await response.json();\n      if (!Array.isArray(classData) || classData.length === 0) {\n        console.error(\"Aucune classe disponible ou les données sont invalides.\");\n        return;\n      }\n\n      // Trier les classes dans l'ordre désiré\n      const order = [\"Petite section\", \"Moyenne section\", \"Grande section\", \"CP\", \"CE1\", \"CE2\", \"CM1\", \"CM2\"];\n      const sortedClasses = classData.sort((a, b) => order.indexOf(a.classe) - order.indexOf(b.classe));\n      console.log(\"Classes triées :\", sortedClasses);\n      const currentDate = new Date().toLocaleDateString().replace(/\\//g, \"-\");\n\n      // Générer un fichier PDF contenant les classes triées\n      const pdf = new jsPDF();\n      pdf.text(\"Liste des classes\", 10, 10);\n      let pageNumber = 1;\n      sortedClasses.forEach((classe, index) => {\n        if (index > 0) {\n          pdf.addPage(); // Ajouter une nouvelle page pour chaque classe, sauf la première\n          pageNumber++;\n        }\n\n        // Titre de la classe (en haut de chaque page)\n        pdf.text(`Classe : ${classe.classe}  ${currentDate}`, 10, 20);\n        let yPosition = 30; // Position initiale pour les élèves, après le titre\n\n        // Liste des élèves de la classe\n        classe.students.forEach(student => {\n          const birthDate = new Date(student.dateDeNaissance).toLocaleDateString();\n          pdf.text(`- ${student.prenom} ${student.nom} (né(e) le ${birthDate})`, 15, yPosition);\n          yPosition += 10;\n\n          // Vérification si la page est pleine\n          if (yPosition > 280) {\n            // Environ 280 pour une page A4 avec des marges\n            pdf.addPage();\n            pageNumber++;\n            pdf.text(`Page ${pageNumber}`, 10, 10);\n            pdf.text(`Classe : ${classe.classe} (suite)`, 10, 20);\n            yPosition = 30;\n          }\n        });\n      });\n\n      // Sauvegarder le PDF\n\n      pdf.save(`classes-${currentDate}.pdf`);\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion au serveur :\", error);\n    }\n  };\n\n  // Gestion du fichier des élèves\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    if (selectedFile) {\n      Papa.parse(selectedFile, {\n        complete: result => {\n          const formattedData = result.data.map(row => {\n            var _row$DateDeNaissanc, _row$Nom, _row$Prenom;\n            const rawDate = (_row$DateDeNaissanc = row[\"Date de naissance\"]) === null || _row$DateDeNaissanc === void 0 ? void 0 : _row$DateDeNaissanc.trim();\n\n            // Conversion de la date avec `date-fns`\n            let dateDeNaissance = null;\n            try {\n              const parsedDate = parse(rawDate, \"dd/MM/yyyy\", new Date());\n              if (isValid(parsedDate)) {\n                dateDeNaissance = format(parsedDate, \"yyyy-MM-dd\");\n              }\n            } catch (error) {\n              console.error(\"Erreur de format de date :\", rawDate, error);\n            }\n            return {\n              nom: (_row$Nom = row[\"Nom\"]) === null || _row$Nom === void 0 ? void 0 : _row$Nom.trim(),\n              prenom: (_row$Prenom = row[\"Prenom\"]) === null || _row$Prenom === void 0 ? void 0 : _row$Prenom.trim(),\n              dateDeNaissance: dateDeNaissance // Format correct ou null\n            };\n          });\n          setData(formattedData);\n          sendDataToBackend(formattedData); // Envoi des données transformées\n        },\n        header: true,\n        skipEmptyLines: true\n      });\n    }\n  };\n\n  // Gestion du fichier des redoublants\n  const handleRedoublantsFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setRedoublantsFile(selectedFile);\n    if (selectedFile) {\n      Papa.parse(selectedFile, {\n        complete: result => {\n          const formattedData = result.data.map(row => {\n            var _row$DateDeNaissanc2, _row$Nom2, _row$Prenom2;\n            const rawDate = (_row$DateDeNaissanc2 = row[\"Date de naissance\"]) === null || _row$DateDeNaissanc2 === void 0 ? void 0 : _row$DateDeNaissanc2.trim();\n            let dateDeNaissance = null;\n            try {\n              const parsedDate = parse(rawDate, \"dd/MM/yyyy\", new Date()); // Remplacez par le format de vos données\n              if (isValid(parsedDate)) {\n                dateDeNaissance = format(parsedDate, \"yyyy-MM-dd\");\n              } else {\n                console.error(`Date invalide détectée : ${rawDate}`);\n              }\n            } catch (error) {\n              console.error(\"Erreur lors du parsing de la date :\", rawDate, error);\n            }\n            return {\n              nom: (_row$Nom2 = row[\"Nom\"]) === null || _row$Nom2 === void 0 ? void 0 : _row$Nom2.trim(),\n              prenom: (_row$Prenom2 = row[\"Prenom\"]) === null || _row$Prenom2 === void 0 ? void 0 : _row$Prenom2.trim(),\n              dateDeNaissance: dateDeNaissance // Null si invalide\n            };\n          });\n          sendRedoublantsToBackend(formattedData); // Envoyer uniquement les données valides\n        },\n        header: true,\n        skipEmptyLines: true\n      });\n    }\n  };\n  const sendPreinscritToBackend = async file => {\n    const formData = new FormData();\n    formData.append(\"preinscrit\", file); // Le champ doit être \"preinscrit\"\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/preinscrits\", {\n        method: \"POST\",\n        body: formData // Envoi de FormData qui contient le fichier\n      });\n      if (response.ok) {\n        alert(\"Les préinscrits ont été enregistrés.\");\n        await fetchPreinscrits(); // Met à jour la liste des préinscrits\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi au serveur:\", error);\n      alert(\"Une erreur est survenue.\");\n    }\n  };\n\n  // Envoi des données des élèves au backend\n  const sendDataToBackend = async students => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/students\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          students\n        })\n      });\n      if (response.ok) {\n        alert(\"Les élèves ont été enregistrés.\");\n        await fetchClasses();\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi au serveur:\", error);\n      alert(\"Une erreur est survenue.\");\n    }\n  };\n\n  // Fonction pour envoyer le fichier à Multer (backend)\n  const sendRedoublantsFileToBackend = async selectedFile => {\n    const formData = new FormData();\n    formData.append(\"redoublants\", selectedFile);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/update-year\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        alert(\"Les redoublants ont été enregistrés et l'année mise à jour.\");\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi au serveur:\", error);\n      alert(\"Une erreur est survenue dans la route api/update-year.\");\n    }\n  };\n\n  // Envoi des données formatées des redoublants au backend\n  const sendRedoublantsToBackend = async redoublants => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/validate-redoublants\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          redoublants\n        }) // Conversion en JSON avant l'envoi\n      });\n      if (response.ok) {\n        alert(\"Les redoublants ont été validés.\");\n        await fetchClasses();\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi des redoublants:\", error);\n      alert(\"Une erreur est survenue avec la route validate-redoublants.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-transparent\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \" text-white p-10 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"Gestion des \\xC9l\\xE8ves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm mt-2\",\n        children: \"Importez et g\\xE9rez les donn\\xE9es de vos \\xE9l\\xE8ves.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: archiveYear,\n        className: \"cursor-pointer bg-red-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-red-700 mt-4\",\n        children: \"Archiver l'ann\\xE9e scolaire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"mt-10 max-w-7xl mx-auto bg-transparent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between gap-6 mb-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"flex-1 bg-white p-6 rounded-md shadow-md opacity-75\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4\",\n            children: \"Importer les pr\\xE9sinscrits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".txt\",\n            onChange: addPreinscrit,\n            className: \"hidden\",\n            id: \"preinscrit-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"preinscrit-upload\",\n            className: \"cursor-pointer bg-blue-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-blue-700\",\n            children: \"Choisir un fichier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"flex-1 bg-white p-6 rounded-md shadow-md opacity-75\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4\",\n            children: \"Importer un fichier CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: handleFileChange,\n            className: \"hidden\",\n            id: \"file-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            className: \"cursor-pointer bg-blue-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-blue-700\",\n            children: \"Choisir un fichier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"flex-1 bg-white p-6 rounded-md shadow-md opacity-75\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4\",\n            children: \"Indiquer les redoublants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: handleRedoublantsFileChange,\n            className: \"hidden\",\n            id: \"redoublants-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"redoublants-upload\",\n            className: \"cursor-pointer bg-green-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-green-700\",\n            children: \"Choisir un fichier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-3 gap-6 opacity-95\",\n        children: classes.map((classItem, classIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-md shadow-md \",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold mb-2\",\n            children: classItem.classe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this), classItem.students.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"w-full border-collapse border border-gray-400 \",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                  children: \"Nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                  children: \"Pr\\xE9nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                  children: \"Date de naissance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: classItem.students.map((student, studentIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border border-gray-300 px-4 py-2\",\n                  children: student.nom\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border border-gray-300 px-4 py-2\",\n                  children: student.prenom\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border border-gray-300 px-4 py-2\",\n                  children: student.dateDeNaissance\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 25\n                }, this)]\n              }, studentIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Aucun \\xE9tudiant dans cette classe.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 17\n          }, this)]\n        }, classIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5OHKAFSMqX2H1ut/WJanaStLJqk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Papa","parse","isValid","format","jsPDF","jsxDEV","_jsxDEV","App","_s","file","setFile","redoublantsFile","setRedoublantsFile","data","setData","classes","setClasses","preinscrits","setPreinscrits","preinscritFile","setPreinscritFile","fetchClasses","fetchPreinscrits","addPreinscrit","e","selectedFile","target","files","sendPreinscritToBackend","response","fetch","ok","classData","json","order","sortedClasses","sort","a","b","indexOf","classe","console","error","archiveYear","statusText","Array","isArray","length","log","currentDate","Date","toLocaleDateString","replace","pdf","text","pageNumber","forEach","index","addPage","yPosition","students","student","birthDate","dateDeNaissance","prenom","nom","save","handleFileChange","complete","result","formattedData","map","row","_row$DateDeNaissanc","_row$Nom","_row$Prenom","rawDate","trim","parsedDate","sendDataToBackend","header","skipEmptyLines","handleRedoublantsFileChange","_row$DateDeNaissanc2","_row$Nom2","_row$Prenom2","sendRedoublantsToBackend","formData","FormData","append","method","body","alert","errorData","message","headers","JSON","stringify","sendRedoublantsFileToBackend","redoublants","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","accept","onChange","id","htmlFor","classItem","classIndex","studentIndex","_c","$RefreshReg$"],"sources":["C:/Users/jeremy/Desktop/4DEVS/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport { parse, isValid, format } from \"date-fns\";\nimport { jsPDF } from \"jspdf\";\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [redoublantsFile, setRedoublantsFile] = useState(null); // Nouveau fichier pour les redoublants\n  const [data, setData] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [preinscrits, setPreinscrits] = useState([]);\n  const [preinscritFile, setPreinscritFile] = useState(null);\n\n  useEffect(() => {\n    fetchClasses();\n    fetchPreinscrits();\n  }, []);\n\n  const addPreinscrit = (e) => {\n    const selectedFile = e.target.files[0];\n    setPreinscritFile(selectedFile);\n    sendPreinscritToBackend(selectedFile);\n  };\n\n  \n  // Récupération des classes du backend\n  const fetchClasses = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/classes\");\n      if (response.ok) {\n        const classData = await response.json();\n\n        // Trier les classes dans l'ordre désiré\n        const order = [\n          \"Petite section\",\n          \"Moyenne section\",\n          \"Grande section\",\n          \"CP\",\n          \"CE1\",\n          \"CE2\",\n          \"CM1\",\n          \"CM2\",\n        ];\n\n        const sortedClasses = classData.sort(\n          (a, b) => order.indexOf(a.classe) - order.indexOf(b.classe)\n        );\n        setClasses(sortedClasses);\n      } else {\n        console.error(\"Erreur lors de la récupération des classes\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion au serveur :\", error);\n    }\n  };\n\n  // Fonction pour archiver l'année scolaire\n  const archiveYear = async () => {\n    try {\n      // Récupérer les classes depuis l'API\n      const response = await fetch(\"http://localhost:5000/api/classes\");\n      if (!response.ok) {\n        console.error(\"Erreur lors de la récupération des classes :\", response.statusText);\n        return;\n      }\n\n      const classData = await response.json();\n\n      if (!Array.isArray(classData) || classData.length === 0) {\n        console.error(\"Aucune classe disponible ou les données sont invalides.\");\n        return;\n      }\n\n      // Trier les classes dans l'ordre désiré\n      const order = [\n        \"Petite section\",\n        \"Moyenne section\",\n        \"Grande section\",\n        \"CP\",\n        \"CE1\",\n        \"CE2\",\n        \"CM1\",\n        \"CM2\",\n      ];\n\n      const sortedClasses = classData.sort(\n        (a, b) => order.indexOf(a.classe) - order.indexOf(b.classe)\n      );\n\n      console.log(\"Classes triées :\", sortedClasses);\n      const currentDate = new Date().toLocaleDateString().replace(/\\//g, \"-\");\n\n      // Générer un fichier PDF contenant les classes triées\n      const pdf = new jsPDF();\n      pdf.text(\"Liste des classes\", 10, 10);\n\n    let pageNumber = 1;\n\n    sortedClasses.forEach((classe, index) => {\n      if (index > 0) {\n        pdf.addPage(); // Ajouter une nouvelle page pour chaque classe, sauf la première\n        pageNumber++;\n      }\n\n      // Titre de la classe (en haut de chaque page)\n      pdf.text(`Classe : ${classe.classe}  ${currentDate}`, 10, 20);\n\n      let yPosition = 30; // Position initiale pour les élèves, après le titre\n\n      // Liste des élèves de la classe\n      classe.students.forEach((student) => {\n        const birthDate = new Date(student.dateDeNaissance).toLocaleDateString();\n        pdf.text(`- ${student.prenom} ${student.nom} (né(e) le ${birthDate})`, 15, yPosition);\n        yPosition += 10;\n\n        // Vérification si la page est pleine\n        if (yPosition > 280) { // Environ 280 pour une page A4 avec des marges\n          pdf.addPage();\n          pageNumber++;\n          pdf.text(`Page ${pageNumber}`, 10, 10);\n          pdf.text(`Classe : ${classe.classe} (suite)`, 10, 20);\n          yPosition = 30;\n        }\n      });\n    });\n\n\n      // Sauvegarder le PDF\n      \n      pdf.save(`classes-${currentDate}.pdf`);\n\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion au serveur :\", error);\n    }\n  };\n\n\n  // Gestion du fichier des élèves\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n\n    if (selectedFile) {\n      Papa.parse(selectedFile, {\n        complete: (result) => {\n          const formattedData = result.data.map((row) => {\n            const rawDate = row[\"Date de naissance\"]?.trim();\n\n            // Conversion de la date avec `date-fns`\n            let dateDeNaissance = null;\n            try {\n              const parsedDate = parse(rawDate, \"dd/MM/yyyy\", new Date());\n              if (isValid(parsedDate)) {\n                dateDeNaissance = format(parsedDate, \"yyyy-MM-dd\");\n              }\n            } catch (error) {\n              console.error(\"Erreur de format de date :\", rawDate, error);\n            }\n\n            return {\n              nom: row[\"Nom\"]?.trim(),\n              prenom: row[\"Prenom\"]?.trim(),\n              dateDeNaissance: dateDeNaissance, // Format correct ou null\n            };\n          });\n\n          setData(formattedData);\n          sendDataToBackend(formattedData); // Envoi des données transformées\n        },\n        header: true,\n        skipEmptyLines: true,\n      });\n    }\n  };\n\n  // Gestion du fichier des redoublants\n  const handleRedoublantsFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setRedoublantsFile(selectedFile);\n\n    if (selectedFile) {\n      Papa.parse(selectedFile, {\n        complete: (result) => {\n          const formattedData = result.data.map((row) => {\n            const rawDate = row[\"Date de naissance\"]?.trim();\n\n            let dateDeNaissance = null;\n            try {\n              const parsedDate = parse(rawDate, \"dd/MM/yyyy\", new Date()); // Remplacez par le format de vos données\n              if (isValid(parsedDate)) {\n                dateDeNaissance = format(parsedDate, \"yyyy-MM-dd\");\n              } else {\n                console.error(`Date invalide détectée : ${rawDate}`);\n              }\n            } catch (error) {\n              console.error(\n                \"Erreur lors du parsing de la date :\",\n                rawDate,\n                error\n              );\n            }\n\n            return {\n              nom: row[\"Nom\"]?.trim(),\n              prenom: row[\"Prenom\"]?.trim(),\n              dateDeNaissance: dateDeNaissance, // Null si invalide\n            };\n          });\n\n          sendRedoublantsToBackend(formattedData); // Envoyer uniquement les données valides\n        },\n        header: true,\n        skipEmptyLines: true,\n      });\n    }\n  };\n\n  const sendPreinscritToBackend = async (file) => {\n    const formData = new FormData();\n    formData.append(\"preinscrit\", file); // Le champ doit être \"preinscrit\"\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/preinscrits\", {\n        method: \"POST\",\n        body: formData, // Envoi de FormData qui contient le fichier\n      });\n\n      if (response.ok) {\n        alert(\"Les préinscrits ont été enregistrés.\");\n        await fetchPreinscrits(); // Met à jour la liste des préinscrits\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi au serveur:\", error);\n      alert(\"Une erreur est survenue.\");\n    }\n  };\n\n  // Envoi des données des élèves au backend\n  const sendDataToBackend = async (students) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/students\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ students }),\n      });\n\n      if (response.ok) {\n        alert(\"Les élèves ont été enregistrés.\");\n        await fetchClasses();\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi au serveur:\", error);\n      alert(\"Une erreur est survenue.\");\n    }\n  };\n\n  // Fonction pour envoyer le fichier à Multer (backend)\n  const sendRedoublantsFileToBackend = async (selectedFile) => {\n    const formData = new FormData();\n    formData.append(\"redoublants\", selectedFile);\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/update-year\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (response.ok) {\n        alert(\"Les redoublants ont été enregistrés et l'année mise à jour.\");\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi au serveur:\", error);\n      alert(\"Une erreur est survenue dans la route api/update-year.\");\n    }\n  };\n\n  // Envoi des données formatées des redoublants au backend\n  const sendRedoublantsToBackend = async (redoublants) => {\n    try {\n      const response = await fetch(\n        \"http://localhost:5000/api/validate-redoublants\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ redoublants }), // Conversion en JSON avant l'envoi\n        }\n      );\n\n      if (response.ok) {\n        alert(\"Les redoublants ont été validés.\");\n        await fetchClasses();\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi des redoublants:\", error);\n      alert(\"Une erreur est survenue avec la route validate-redoublants.\");\n    }\n  };\n\n\n\n  return (\n    <div className=\"min-h-screen bg-transparent\">\n      <header className=\" text-white p-10 text-center\">\n        <h1 className=\"text-3xl font-bold\">Gestion des Élèves</h1>\n        <p className=\"text-sm mt-2\">\n          Importez et gérez les données de vos élèves.\n        </p>\n        <button onClick={archiveYear} className=\"cursor-pointer bg-red-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-red-700 mt-4\">\n          Archiver l'année scolaire\n        </button>\n      </header>\n\n      <main className=\"mt-10 max-w-7xl mx-auto bg-transparent\">\n        {/* Import des présinscrit */}\n        \n\n        {/* Encadrés côte à côte */}\n        <div className=\"flex justify-between gap-6 mb-10\">\n\n          <section className=\"flex-1 bg-white p-6 rounded-md shadow-md opacity-75\">\n            <h2 className=\"text-2xl font-semibold mb-4\">\n              Importer les présinscrits\n            </h2>\n          <input\n            type=\"file\"\n            accept=\".txt\"\n            onChange={addPreinscrit}\n              className=\"hidden\"\n              id=\"preinscrit-upload\"\n            />\n            <label\n              htmlFor=\"preinscrit-upload\"\n              className=\"cursor-pointer bg-blue-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-blue-700\"\n            >\n              Choisir un fichier\n            </label>\n          </section>\n          <section className=\"flex-1 bg-white p-6 rounded-md shadow-md opacity-75\">\n            <h2 className=\"text-2xl font-semibold mb-4\">\n              Importer un fichier CSV\n            </h2>\n            <input\n              type=\"file\"\n              accept=\".csv\"\n              onChange={handleFileChange}\n              className=\"hidden\"\n              id=\"file-upload\"\n            />\n            <label\n              htmlFor=\"file-upload\"\n              className=\"cursor-pointer bg-blue-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-blue-700\"\n            >\n              Choisir un fichier\n            </label>\n          </section>\n\n          <section className=\"flex-1 bg-white p-6 rounded-md shadow-md opacity-75\">\n            <h2 className=\"text-2xl font-semibold mb-4\">\n              Indiquer les redoublants\n            </h2>\n            <input\n              type=\"file\"\n              accept=\".csv\"\n              onChange={handleRedoublantsFileChange}\n              className=\"hidden\"\n              id=\"redoublants-upload\"\n            />\n            <label\n              htmlFor=\"redoublants-upload\"\n              className=\"cursor-pointer bg-green-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-green-700\"\n            >\n              Choisir un fichier\n            </label>\n          </section>\n        </div>\n\n        {/* Tableaux en grille */}\n        <div className=\"grid grid-cols-3 gap-6 opacity-95\">\n          {classes.map((classItem, classIndex) => (\n            <div key={classIndex} className=\"bg-white p-4 rounded-md shadow-md \">\n              <h3 className=\"text-xl font-bold mb-2\">{classItem.classe}</h3>\n              {classItem.students.length > 0 ? (\n                <table className=\"w-full border-collapse border border-gray-400 \">\n                  <thead>\n                    <tr>\n                      <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\n                        Nom\n                      </th>\n                      <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\n                        Prénom\n                      </th>\n                      <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\n                        Date de naissance\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {classItem.students.map((student, studentIndex) => (\n                      <tr key={studentIndex}>\n                        <td className=\"border border-gray-300 px-4 py-2\">\n                          {student.nom}\n                        </td>\n                        <td className=\"border border-gray-300 px-4 py-2\">\n                          {student.prenom}\n                        </td>\n                        <td className=\"border border-gray-300 px-4 py-2\">\n                          {student.dateDeNaissance}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              ) : (\n                <p>Aucun étudiant dans cette classe.</p>\n              )}\n            </div>\n          ))}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}