{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeremy\\\\Desktop\\\\4DEVS\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport { parse, isValid, format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [redoublantsFile, setRedoublantsFile] = useState(null); // Nouveau fichier pour les redoublants\n  const [data, setData] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [preinscrit, setPreinscrit] = useState([]);\n  const [preinscritFile, setPreinscritFile] = useState(null);\n  useEffect(() => {\n    fetchClasses();\n  }, []);\n  const addPreinscrit = e => {\n    const selectedFile = e.target.files[0];\n    setPreinscritFile(selectedFile);\n    sendPreinscritToBackend(selectedFile);\n  };\n  const sendPreinscritToBackend = async file => {\n    const reader = new FileReader();\n    reader.onload = async e => {\n      const fileContent = e.target.result; // Contenu du fichier\n      console.log(\"Contenu du fichier préinscrit :\", fileContent); // Affiche le contenu dans la console\n\n      const preinscrit = fileContent;\n      try {\n        const response = await fetch(\"http://localhost:5000/api/preinscrit\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            preinscrit\n          })\n        });\n        if (response.ok) {\n          alert(\"Les préinscrits ont été enregistrés.\");\n        } else {\n          const errorData = await response.json();\n          alert(`Erreur : ${errorData.message}`);\n        }\n      } catch (error) {\n        console.error(\"Erreur d'envoi au serveur:\", error);\n        alert(\"Une erreur est survenue.\");\n      }\n    };\n    reader.readAsText(file); // Lit le fichier comme du texte\n  };\n\n  // Récupération des classes du backend\n  const fetchClasses = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/classes\");\n      if (response.ok) {\n        const classData = await response.json();\n\n        // Trier les classes dans l'ordre désiré\n        const order = [\"Petite section\", \"Moyenne section\", \"Grande section\", \"CP\", \"CE1\", \"CE2\", \"CM1\", \"CM2\"];\n        const sortedClasses = classData.sort((a, b) => order.indexOf(a.classe) - order.indexOf(b.classe));\n        setClasses(sortedClasses);\n      } else {\n        console.error(\"Erreur lors de la récupération des classes\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion au serveur :\", error);\n    }\n  };\n\n  // Gestion du fichier des élèves\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    if (selectedFile) {\n      Papa.parse(selectedFile, {\n        complete: result => {\n          const formattedData = result.data.map(row => {\n            var _row$DateDeNaissanc, _row$Nom, _row$Prenom;\n            const rawDate = (_row$DateDeNaissanc = row[\"Date de naissance\"]) === null || _row$DateDeNaissanc === void 0 ? void 0 : _row$DateDeNaissanc.trim();\n\n            // Conversion de la date avec `date-fns`\n            let dateDeNaissance = null;\n            try {\n              const parsedDate = parse(rawDate, \"dd/MM/yyyy\", new Date());\n              if (isValid(parsedDate)) {\n                dateDeNaissance = format(parsedDate, \"yyyy-MM-dd\");\n              }\n            } catch (error) {\n              console.error(\"Erreur de format de date :\", rawDate, error);\n            }\n            return {\n              nom: (_row$Nom = row[\"Nom\"]) === null || _row$Nom === void 0 ? void 0 : _row$Nom.trim(),\n              prenom: (_row$Prenom = row[\"Prenom\"]) === null || _row$Prenom === void 0 ? void 0 : _row$Prenom.trim(),\n              dateDeNaissance: dateDeNaissance // Format correct ou null\n            };\n          });\n          setData(formattedData);\n          sendDataToBackend(formattedData); // Envoi des données transformées\n        },\n        header: true,\n        skipEmptyLines: true\n      });\n    }\n  };\n\n  // Gestion du fichier des redoublants\n  const handleRedoublantsFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setRedoublantsFile(selectedFile);\n    if (selectedFile) {\n      Papa.parse(selectedFile, {\n        complete: result => {\n          const formattedData = result.data.map(row => {\n            var _row$DateDeNaissanc2, _row$Nom2, _row$Prenom2;\n            const rawDate = (_row$DateDeNaissanc2 = row[\"Date de naissance\"]) === null || _row$DateDeNaissanc2 === void 0 ? void 0 : _row$DateDeNaissanc2.trim();\n            let dateDeNaissance = null;\n            try {\n              const parsedDate = parse(rawDate, \"dd/MM/yyyy\", new Date()); // Remplacez par le format de vos données\n              if (isValid(parsedDate)) {\n                dateDeNaissance = format(parsedDate, \"yyyy-MM-dd\");\n              } else {\n                console.error(`Date invalide détectée : ${rawDate}`);\n              }\n            } catch (error) {\n              console.error(\"Erreur lors du parsing de la date :\", rawDate, error);\n            }\n            return {\n              nom: (_row$Nom2 = row[\"Nom\"]) === null || _row$Nom2 === void 0 ? void 0 : _row$Nom2.trim(),\n              prenom: (_row$Prenom2 = row[\"Prenom\"]) === null || _row$Prenom2 === void 0 ? void 0 : _row$Prenom2.trim(),\n              dateDeNaissance: dateDeNaissance // Null si invalide\n            };\n          });\n          sendRedoublantsToBackend(formattedData); // Envoyer uniquement les données valides\n        },\n        header: true,\n        skipEmptyLines: true\n      });\n    }\n  };\n\n  // Envoi des données des élèves au backend\n  const sendDataToBackend = async students => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/students\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          students\n        })\n      });\n      if (response.ok) {\n        alert(\"Les élèves ont été enregistrés.\");\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi au serveur:\", error);\n      alert(\"Une erreur est survenue.\");\n    }\n  };\n\n  // Fonction pour envoyer le fichier à Multer (backend)\n  const sendRedoublantsFileToBackend = async selectedFile => {\n    const formData = new FormData();\n    formData.append(\"redoublants\", selectedFile);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/update-year\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        alert(\"Les redoublants ont été enregistrés et l'année mise à jour.\");\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi au serveur:\", error);\n      alert(\"Une erreur est survenue dans la route api/update-year.\");\n    }\n  };\n\n  // Envoi des données formatées des redoublants au backend\n  const sendRedoublantsToBackend = async redoublants => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/validate-redoublants\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          redoublants\n        }) // Conversion en JSON avant l'envoi\n      });\n      if (response.ok) {\n        alert(\"Les redoublants ont été validés.\");\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi des redoublants:\", error);\n      alert(\"Une erreur est survenue avec la route validate-redoublants.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-transparent\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \" text-white p-10 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"Gestion des \\xC9l\\xE8ves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm mt-2\",\n        children: \"Importez et g\\xE9rez les donn\\xE9es de vos \\xE9l\\xE8ves.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"mt-10 max-w-7xl mx-auto bg-transparent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between gap-6 mb-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"flex-1 bg-white p-6 rounded-md shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4\",\n            children: \"Importer les pr\\xE9sinscrits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".txt\",\n            onChange: addPreinscrit,\n            className: \"hidden\",\n            id: \"preinscrit-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"preinscrit-upload\",\n            className: \"cursor-pointer bg-blue-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-blue-700\",\n            children: \"Choisir un fichier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"flex-1 bg-white p-6 rounded-md shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4\",\n            children: \"Importer un fichier CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: handleFileChange,\n            className: \"hidden\",\n            id: \"file-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            className: \"cursor-pointer bg-blue-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-blue-700\",\n            children: \"Choisir un fichier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"flex-1 bg-white p-6 rounded-md shadow-md bg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4\",\n            children: \"Indiquer les redoublants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: handleRedoublantsFileChange,\n            className: \"hidden\",\n            id: \"redoublants-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"redoublants-upload\",\n            className: \"cursor-pointer bg-green-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-green-700\",\n            children: \"Choisir un fichier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-3 gap-6\",\n        children: classes.map((classItem, classIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-md shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold mb-2\",\n            children: classItem.classe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), classItem.students.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"w-full border-collapse border border-gray-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                  children: \"Nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                  children: \"Pr\\xE9nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                  children: \"Date de naissance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: classItem.students.map((student, studentIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border border-gray-300 px-4 py-2\",\n                  children: student.nom\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border border-gray-300 px-4 py-2\",\n                  children: student.prenom\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border border-gray-300 px-4 py-2\",\n                  children: student.dateDeNaissance\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 25\n                }, this)]\n              }, studentIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Aucun \\xE9tudiant dans cette classe.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this)]\n        }, classIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tk7JaAlegZ/lv4oynZVZPPyvmQE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Papa","parse","isValid","format","jsxDEV","_jsxDEV","App","_s","file","setFile","redoublantsFile","setRedoublantsFile","data","setData","classes","setClasses","preinscrit","setPreinscrit","preinscritFile","setPreinscritFile","fetchClasses","addPreinscrit","e","selectedFile","target","files","sendPreinscritToBackend","reader","FileReader","onload","fileContent","result","console","log","response","fetch","method","headers","body","JSON","stringify","ok","alert","errorData","json","message","error","readAsText","classData","order","sortedClasses","sort","a","b","indexOf","classe","handleFileChange","complete","formattedData","map","row","_row$DateDeNaissanc","_row$Nom","_row$Prenom","rawDate","trim","dateDeNaissance","parsedDate","Date","nom","prenom","sendDataToBackend","header","skipEmptyLines","handleRedoublantsFileChange","_row$DateDeNaissanc2","_row$Nom2","_row$Prenom2","sendRedoublantsToBackend","students","sendRedoublantsFileToBackend","formData","FormData","append","redoublants","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","id","htmlFor","classItem","classIndex","length","student","studentIndex","_c","$RefreshReg$"],"sources":["C:/Users/jeremy/Desktop/4DEVS/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport { parse, isValid, format } from \"date-fns\";\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [redoublantsFile, setRedoublantsFile] = useState(null); // Nouveau fichier pour les redoublants\n  const [data, setData] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [preinscrit, setPreinscrit] = useState([]);\n  const [preinscritFile, setPreinscritFile] = useState(null);\n\n  useEffect(() => {\n    fetchClasses();\n  }, []);\n\n  const addPreinscrit = (e) => {\n    const selectedFile = e.target.files[0];\n    setPreinscritFile(selectedFile);\n    sendPreinscritToBackend(selectedFile);\n  };\n\n  const sendPreinscritToBackend = async (file) => {\n    const reader = new FileReader();\n\n    reader.onload = async (e) => {\n      const fileContent = e.target.result; // Contenu du fichier\n      console.log(\"Contenu du fichier préinscrit :\", fileContent); // Affiche le contenu dans la console\n\n      const preinscrit = fileContent;\n\n      try {\n        const response = await fetch(\"http://localhost:5000/api/preinscrit\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ preinscrit }),\n        });\n\n        if (response.ok) {\n          alert(\"Les préinscrits ont été enregistrés.\");\n        } else {\n          const errorData = await response.json();\n          alert(`Erreur : ${errorData.message}`);\n        }\n      } catch (error) {\n        console.error(\"Erreur d'envoi au serveur:\", error);\n        alert(\"Une erreur est survenue.\");\n      }\n    };\n\n    reader.readAsText(file); // Lit le fichier comme du texte\n  };\n\n  // Récupération des classes du backend\n  const fetchClasses = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/classes\");\n      if (response.ok) {\n        const classData = await response.json();\n\n        // Trier les classes dans l'ordre désiré\n        const order = [\n          \"Petite section\",\n          \"Moyenne section\",\n          \"Grande section\",\n          \"CP\",\n          \"CE1\",\n          \"CE2\",\n          \"CM1\",\n          \"CM2\",\n        ];\n\n        const sortedClasses = classData.sort(\n          (a, b) => order.indexOf(a.classe) - order.indexOf(b.classe)\n        );\n        setClasses(sortedClasses);\n      } else {\n        console.error(\"Erreur lors de la récupération des classes\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion au serveur :\", error);\n    }\n  };\n\n  // Gestion du fichier des élèves\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n\n    if (selectedFile) {\n      Papa.parse(selectedFile, {\n        complete: (result) => {\n          const formattedData = result.data.map((row) => {\n            const rawDate = row[\"Date de naissance\"]?.trim();\n\n            // Conversion de la date avec `date-fns`\n            let dateDeNaissance = null;\n            try {\n              const parsedDate = parse(rawDate, \"dd/MM/yyyy\", new Date());\n              if (isValid(parsedDate)) {\n                dateDeNaissance = format(parsedDate, \"yyyy-MM-dd\");\n              }\n            } catch (error) {\n              console.error(\"Erreur de format de date :\", rawDate, error);\n            }\n\n            return {\n              nom: row[\"Nom\"]?.trim(),\n              prenom: row[\"Prenom\"]?.trim(),\n              dateDeNaissance: dateDeNaissance, // Format correct ou null\n            };\n          });\n\n          setData(formattedData);\n          sendDataToBackend(formattedData); // Envoi des données transformées\n        },\n        header: true,\n        skipEmptyLines: true,\n      });\n    }\n  };\n\n  // Gestion du fichier des redoublants\n  const handleRedoublantsFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setRedoublantsFile(selectedFile);\n\n    if (selectedFile) {\n      Papa.parse(selectedFile, {\n        complete: (result) => {\n          const formattedData = result.data.map((row) => {\n            const rawDate = row[\"Date de naissance\"]?.trim();\n\n            let dateDeNaissance = null;\n            try {\n              const parsedDate = parse(rawDate, \"dd/MM/yyyy\", new Date()); // Remplacez par le format de vos données\n              if (isValid(parsedDate)) {\n                dateDeNaissance = format(parsedDate, \"yyyy-MM-dd\");\n              } else {\n                console.error(`Date invalide détectée : ${rawDate}`);\n              }\n            } catch (error) {\n              console.error(\n                \"Erreur lors du parsing de la date :\",\n                rawDate,\n                error\n              );\n            }\n\n            return {\n              nom: row[\"Nom\"]?.trim(),\n              prenom: row[\"Prenom\"]?.trim(),\n              dateDeNaissance: dateDeNaissance, // Null si invalide\n            };\n          });\n\n          sendRedoublantsToBackend(formattedData); // Envoyer uniquement les données valides\n        },\n        header: true,\n        skipEmptyLines: true,\n      });\n    }\n  };\n\n  // Envoi des données des élèves au backend\n  const sendDataToBackend = async (students) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/students\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ students }),\n      });\n\n      if (response.ok) {\n        alert(\"Les élèves ont été enregistrés.\");\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi au serveur:\", error);\n      alert(\"Une erreur est survenue.\");\n    }\n  };\n\n  // Fonction pour envoyer le fichier à Multer (backend)\n  const sendRedoublantsFileToBackend = async (selectedFile) => {\n    const formData = new FormData();\n    formData.append(\"redoublants\", selectedFile);\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/update-year\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (response.ok) {\n        alert(\"Les redoublants ont été enregistrés et l'année mise à jour.\");\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi au serveur:\", error);\n      alert(\"Une erreur est survenue dans la route api/update-year.\");\n    }\n  };\n\n  // Envoi des données formatées des redoublants au backend\n  const sendRedoublantsToBackend = async (redoublants) => {\n    try {\n      const response = await fetch(\n        \"http://localhost:5000/api/validate-redoublants\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ redoublants }), // Conversion en JSON avant l'envoi\n        }\n      );\n\n      if (response.ok) {\n        alert(\"Les redoublants ont été validés.\");\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi des redoublants:\", error);\n      alert(\"Une erreur est survenue avec la route validate-redoublants.\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-transparent\">\n      <header className=\" text-white p-10 text-center\">\n        <h1 className=\"text-3xl font-bold\">Gestion des Élèves</h1>\n        <p className=\"text-sm mt-2\">\n          Importez et gérez les données de vos élèves.\n        </p>\n      </header>\n\n      <main className=\"mt-10 max-w-7xl mx-auto bg-transparent\">\n        {/* Import des présinscrit */}\n        \n\n        {/* Encadrés côte à côte */}\n        <div className=\"flex justify-between gap-6 mb-10\">\n\n          <section className=\"flex-1 bg-white p-6 rounded-md shadow-md\">\n            <h2 className=\"text-2xl font-semibold mb-4\">\n              Importer les présinscrits\n            </h2>\n          <input\n            type=\"file\"\n            accept=\".txt\"\n            onChange={addPreinscrit}\n              className=\"hidden\"\n              id=\"preinscrit-upload\"\n            />\n            <label\n              htmlFor=\"preinscrit-upload\"\n              className=\"cursor-pointer bg-blue-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-blue-700\"\n            >\n              Choisir un fichier\n            </label>\n          </section>\n          <section className=\"flex-1 bg-white p-6 rounded-md shadow-md\">\n            <h2 className=\"text-2xl font-semibold mb-4\">\n              Importer un fichier CSV\n            </h2>\n            <input\n              type=\"file\"\n              accept=\".csv\"\n              onChange={handleFileChange}\n              className=\"hidden\"\n              id=\"file-upload\"\n            />\n            <label\n              htmlFor=\"file-upload\"\n              className=\"cursor-pointer bg-blue-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-blue-700\"\n            >\n              Choisir un fichier\n            </label>\n          </section>\n\n          <section className=\"flex-1 bg-white p-6 rounded-md shadow-md bg\">\n            <h2 className=\"text-2xl font-semibold mb-4\">\n              Indiquer les redoublants\n            </h2>\n            <input\n              type=\"file\"\n              accept=\".csv\"\n              onChange={handleRedoublantsFileChange}\n              className=\"hidden\"\n              id=\"redoublants-upload\"\n            />\n            <label\n              htmlFor=\"redoublants-upload\"\n              className=\"cursor-pointer bg-green-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-green-700\"\n            >\n              Choisir un fichier\n            </label>\n          </section>\n        </div>\n\n        {/* Tableaux en grille */}\n        <div className=\"grid grid-cols-3 gap-6\">\n          {classes.map((classItem, classIndex) => (\n            <div key={classIndex} className=\"bg-white p-4 rounded-md shadow-md\">\n              <h3 className=\"text-xl font-bold mb-2\">{classItem.classe}</h3>\n              {classItem.students.length > 0 ? (\n                <table className=\"w-full border-collapse border border-gray-400\">\n                  <thead>\n                    <tr>\n                      <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\n                        Nom\n                      </th>\n                      <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\n                        Prénom\n                      </th>\n                      <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\n                        Date de naissance\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {classItem.students.map((student, studentIndex) => (\n                      <tr key={studentIndex}>\n                        <td className=\"border border-gray-300 px-4 py-2\">\n                          {student.nom}\n                        </td>\n                        <td className=\"border border-gray-300 px-4 py-2\">\n                          {student.prenom}\n                        </td>\n                        <td className=\"border border-gray-300 px-4 py-2\">\n                          {student.dateDeNaissance}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              ) : (\n                <p>Aucun étudiant dans cette classe.</p>\n              )}\n            </div>\n          ))}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}