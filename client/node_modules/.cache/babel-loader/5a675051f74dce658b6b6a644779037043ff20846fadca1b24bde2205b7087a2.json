{"ast":null,"code":"var _jsxFileName = \"/Users/manan/Documents/SDV/4devs/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport { parse, isValid, format } from \"date-fns\";\nimport { jsPDF } from \"jspdf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [redoublantsFile, setRedoublantsFile] = useState(null); // Nouveau fichier pour les redoublants\n  const [data, setData] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [preinscrits, setPreinscrits] = useState([]);\n  const [preinscritFile, setPreinscritFile] = useState(null);\n  useEffect(() => {\n    fetchClasses();\n    fetchPreinscrits();\n  }, []);\n  const addPreinscrit = e => {\n    const selectedFile = e.target.files[0];\n    setPreinscritFile(selectedFile);\n    sendPreinscritToBackend(selectedFile);\n  };\n\n  // Récupération des classes du backend\n  const fetchClasses = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3000/api/classes\", {\n        method: \"GET\",\n        // Le type de la méthode est maintenant GET pour une récupération de données, non POST.\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        const classData = await response.json();\n\n        // Trier les classes dans l'ordre désiré\n        const order = [\"Petite section\", \"Moyenne section\", \"Grande section\", \"CP\", \"CE1\", \"CE2\", \"CM1\", \"CM2\"];\n        const sortedClasses = classData.sort((a, b) => order.indexOf(a.classe) - order.indexOf(b.classe));\n        setClasses(sortedClasses);\n      } else {\n        console.error(\"Erreur lors de la récupération des classes\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion au serveur :\", error);\n    }\n  };\n\n  // Gestion du fichier des élèves\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    if (selectedFile) {\n      Papa.parse(selectedFile, {\n        complete: result => {\n          const formattedData = result.data.map(row => {\n            var _row$DateDeNaissanc, _row$Nom, _row$Prenom;\n            const rawDate = (_row$DateDeNaissanc = row[\"Date de naissance\"]) === null || _row$DateDeNaissanc === void 0 ? void 0 : _row$DateDeNaissanc.trim();\n\n            // Conversion de la date avec `date-fns`\n            let dateDeNaissance = null;\n            try {\n              const parsedDate = parse(rawDate, \"dd/MM/yyyy\", new Date());\n              if (isValid(parsedDate)) {\n                dateDeNaissance = format(parsedDate, \"yyyy-MM-dd\");\n              }\n            } catch (error) {\n              console.error(\"Erreur de format de date :\", rawDate, error);\n            }\n            return {\n              nom: (_row$Nom = row[\"Nom\"]) === null || _row$Nom === void 0 ? void 0 : _row$Nom.trim(),\n              prenom: (_row$Prenom = row[\"Prenom\"]) === null || _row$Prenom === void 0 ? void 0 : _row$Prenom.trim(),\n              dateDeNaissance: dateDeNaissance // Format correct ou null\n            };\n          });\n          setData(formattedData);\n          sendDataToBackend(formattedData); // Envoi des données transformées\n        },\n        header: true,\n        skipEmptyLines: true\n      });\n    }\n  };\n\n  // Gestion du fichier des redoublants\n  const handleRedoublantsFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setRedoublantsFile(selectedFile);\n    if (selectedFile) {\n      Papa.parse(selectedFile, {\n        complete: result => {\n          const formattedData = result.data.map(row => {\n            var _row$DateDeNaissanc2, _row$Nom2, _row$Prenom2;\n            const rawDate = (_row$DateDeNaissanc2 = row[\"Date de naissance\"]) === null || _row$DateDeNaissanc2 === void 0 ? void 0 : _row$DateDeNaissanc2.trim();\n            let dateDeNaissance = null;\n            try {\n              const parsedDate = parse(rawDate, \"dd/MM/yyyy\", new Date()); // Remplacez par le format de vos données\n              if (isValid(parsedDate)) {\n                dateDeNaissance = format(parsedDate, \"yyyy-MM-dd\");\n              } else {\n                console.error(`Date invalide détectée : ${rawDate}`);\n              }\n            } catch (error) {\n              console.error(\"Erreur lors du parsing de la date :\", rawDate, error);\n            }\n            return {\n              nom: (_row$Nom2 = row[\"Nom\"]) === null || _row$Nom2 === void 0 ? void 0 : _row$Nom2.trim(),\n              prenom: (_row$Prenom2 = row[\"Prenom\"]) === null || _row$Prenom2 === void 0 ? void 0 : _row$Prenom2.trim(),\n              dateDeNaissance: dateDeNaissance // Null si invalide\n            };\n          });\n          sendRedoublantsToBackend(formattedData); // Envoyer uniquement les données valides\n        },\n        header: true,\n        skipEmptyLines: true\n      });\n    }\n  };\n  const sendPreinscritToBackend = async file => {\n    const formData = new FormData();\n    formData.append(\"preinscrit\", file); // Le champ doit être \"preinscrit\"\n\n    try {\n      const response = await fetch(\"http://localhost:3000/api/preinscrits\", {\n        method: \"POST\",\n        body: formData,\n        // Envoi de FormData qui contient le fichier\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        alert(\"Les préinscrits ont été enregistrés.\");\n        await fetchPreinscrits(); // Met à jour la liste des préinscrits\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi au serveur:\", error);\n      alert(\"Une erreur est survenue.\");\n    }\n  };\n\n  // Envoi des données des élèves au backend\n  const sendDataToBackend = async students => {\n    try {\n      const response = await fetch(\"http://localhost:3000/api/students\", {\n        method: \"POST\",\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          students\n        })\n      });\n      if (response.ok) {\n        alert(\"Les élèves ont été enregistrés.\");\n        await fetchClasses();\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi au serveur:\", error);\n      alert(\"Une erreur est survenue.\");\n    }\n  };\n\n  // Fonction pour envoyer le fichier à Multer (backend)\n  const sendRedoublantsFileToBackend = async selectedFile => {\n    const formData = new FormData();\n    formData.append(\"redoublants\", selectedFile);\n    try {\n      const response = await fetch(\"http://localhost:3000/api/update-year\", {\n        method: \"POST\",\n        body: formData,\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        alert(\"Les redoublants ont été enregistrés et l'année mise à jour.\");\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi au serveur:\", error);\n      alert(\"Une erreur est survenue dans la route api/update-year.\");\n    }\n  };\n\n  // Envoi des données formatées des redoublants au backend\n  const sendRedoublantsToBackend = async redoublants => {\n    try {\n      const response = await fetch(\"http://localhost:3000/api/validate-redoublants\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          redoublants\n        }) // Conversion en JSON avant l'envoi\n      });\n      if (response.ok) {\n        alert(\"Les redoublants ont été validés.\");\n        await fetchClasses();\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi des redoublants:\", error);\n      alert(\"Une erreur est survenue avec la route validate-redoublants.\");\n    }\n  };\n  const role = localStorage.getItem(\"role\");\n  const token = localStorage.getItem(\"token\");\n\n  // Fonction pour archiver l'année scolaire\n  const archiveYear = async () => {\n    try {\n      // Récupérer les classes depuis l'API\n      const response = await fetch(\"http://localhost:5000/api/classes\");\n      if (!response.ok) {\n        console.error(\"Erreur lors de la récupération des classes :\", response.statusText);\n        return;\n      }\n      const classData = await response.json();\n      if (!Array.isArray(classData) || classData.length === 0) {\n        console.error(\"Aucune classe disponible ou les données sont invalides.\");\n        return;\n      }\n\n      // Trier les classes dans l'ordre désiré\n      const order = [\"Petite section\", \"Moyenne section\", \"Grande section\", \"CP\", \"CE1\", \"CE2\", \"CM1\", \"CM2\"];\n      const sortedClasses = classData.sort((a, b) => order.indexOf(a.classe) - order.indexOf(b.classe));\n      console.log(\"Classes triées :\", sortedClasses);\n      const currentDate = new Date().toLocaleDateString().replace(/\\//g, \"-\");\n\n      // Générer un fichier PDF contenant les classes triées\n      const pdf = new jsPDF();\n      pdf.text(\"Liste des classes\", 10, 10);\n      let pageNumber = 1;\n      sortedClasses.forEach((classe, index) => {\n        if (index > 0) {\n          pdf.addPage(); // Ajouter une nouvelle page pour chaque classe, sauf la première\n          pageNumber++;\n        }\n\n        // Titre de la classe (en haut de chaque page)\n        pdf.text(`Classe : ${classe.classe}  ${currentDate}`, 10, 20);\n        let yPosition = 30; // Position initiale pour les élèves, après le titre\n\n        // Liste des élèves de la classe\n        classe.students.forEach(student => {\n          const birthDate = new Date(student.dateDeNaissance).toLocaleDateString();\n          pdf.text(`- ${student.prenom} ${student.nom} (né(e) le ${birthDate})`, 15, yPosition);\n          yPosition += 10;\n\n          // Vérification si la page est pleine\n          if (yPosition > 280) {\n            // Environ 280 pour une page A4 avec des marges\n            pdf.addPage();\n            pageNumber++;\n            pdf.text(`Page ${pageNumber}`, 10, 10);\n            pdf.text(`Classe : ${classe.classe} (suite)`, 10, 20);\n            yPosition = 30;\n          }\n        });\n      });\n\n      // Sauvegarder le PDF\n\n      pdf.save(`classes-${currentDate}.pdf`);\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion au serveur :\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \" text-white p-10 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"Gestion des \\xC9l\\xE8ves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm mt-2\",\n        children: \"Importez et g\\xE9rez les donn\\xE9es de vos \\xE9l\\xE8ves.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: archiveYear,\n        className: \"cursor-pointer bg-red-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-red-700 mt-4\",\n        children: \"Archiver l'ann\\xE9e scolaire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"mt-10 max-w-7xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between gap-6 mb-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"flex-1 bg-white p-6 rounded-md shadow-md bg-opacity-75\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4\",\n            children: \"Importer les pr\\xE9sinscrits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".txt\",\n            onChange: addPreinscrit,\n            className: \"hidden\",\n            id: \"preinscrit-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"preinscrit-upload\",\n            className: \"cursor-pointer bg-blue-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-blue-700 whitespace-nowrap\",\n            children: \"Choisir un fichier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"flex-1 bg-white p-6 rounded-md shadow-md bg-opacity-75\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4\",\n            children: \"Importer un fichier CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: handleFileChange,\n            className: \"hidden\",\n            id: \"file-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            className: \"whitespace-nowrap cursor-pointer bg-blue-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-blue-700\",\n            children: \"Choisir un fichier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"flex-1 bg-white p-6 rounded-md shadow-md bg-opacity-75\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4\",\n            children: \"Indiquer les redoublants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: handleRedoublantsFileChange,\n            className: \"hidden\",\n            id: \"redoublants-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"redoublants-upload\",\n            className: \" whitespace-nowrap cursor-pointer bg-green-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-green-700\",\n            children: \"Choisir un fichier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid gap-6 sm:grid-cols-2 md:grid-cols-3\",\n          children: [classes.map((classItem, classIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-black p-4 rounded-md shadow-md bg-opacity-30 overflow-auto custom-scrollbar max-h-96\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \" text-white text-xl font-bold mb-2\",\n              children: classItem.classe\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this), classItem.students.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \" min-w-full border-collapse border-gray-400 \",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \" z-10\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                    children: \"Nom\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                    children: \"Pr\\xE9nom\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 430,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                    children: \"Date de naissance\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: classItem.students.map((student, studentIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-white border border-gray-300 px-4 py-2\",\n                    children: student.nom\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-white border border-gray-300 px-4 py-2\",\n                    children: student.prenom\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-white border border-gray-300 px-4 py-2\",\n                    children: student.dateDeNaissance\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 27\n                  }, this)]\n                }, studentIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Aucun \\xE9tudiant dans cette classe.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 19\n            }, this)]\n          }, classIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-4 rounded-md shadow-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-bold mb-2\",\n              children: \"Pr\\xE9inscrits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this), preinscrits.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"w-full border-collapse border border-gray-400\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                    children: \"Nom\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 467,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                    children: \"Pr\\xE9nom\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                    children: \"Date de naissance\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 473,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: preinscrits.map((student, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"border border-gray-300 px-4 py-2\",\n                    children: student.nom\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"border border-gray-300 px-4 py-2\",\n                    children: student.prenom\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 484,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"border border-gray-300 px-4 py-2\",\n                    children: student.dateDeNaissance\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Aucun pr\\xE9inscrit pour le moment.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5OHKAFSMqX2H1ut/WJanaStLJqk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Papa","parse","isValid","format","jsPDF","jsxDEV","_jsxDEV","App","_s","file","setFile","redoublantsFile","setRedoublantsFile","data","setData","classes","setClasses","preinscrits","setPreinscrits","preinscritFile","setPreinscritFile","fetchClasses","fetchPreinscrits","addPreinscrit","e","selectedFile","target","files","sendPreinscritToBackend","response","fetch","method","headers","token","ok","classData","json","order","sortedClasses","sort","a","b","indexOf","classe","console","error","handleFileChange","complete","result","formattedData","map","row","_row$DateDeNaissanc","_row$Nom","_row$Prenom","rawDate","trim","dateDeNaissance","parsedDate","Date","nom","prenom","sendDataToBackend","header","skipEmptyLines","handleRedoublantsFileChange","_row$DateDeNaissanc2","_row$Nom2","_row$Prenom2","sendRedoublantsToBackend","formData","FormData","append","body","alert","errorData","message","students","JSON","stringify","sendRedoublantsFileToBackend","redoublants","role","localStorage","getItem","archiveYear","statusText","Array","isArray","length","log","currentDate","toLocaleDateString","replace","pdf","text","pageNumber","forEach","index","addPage","yPosition","student","birthDate","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","accept","onChange","id","htmlFor","classItem","classIndex","studentIndex","_c","$RefreshReg$"],"sources":["/Users/manan/Documents/SDV/4devs/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport { parse, isValid, format } from \"date-fns\";\nimport {jsPDF} from \"jspdf\";\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [redoublantsFile, setRedoublantsFile] = useState(null); // Nouveau fichier pour les redoublants\n  const [data, setData] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [preinscrits, setPreinscrits] = useState([]);\n  const [preinscritFile, setPreinscritFile] = useState(null);\n\n  useEffect(() => {\n    fetchClasses();\n    fetchPreinscrits();\n  }, []);\n\n  const addPreinscrit = (e) => {\n    const selectedFile = e.target.files[0];\n    setPreinscritFile(selectedFile);\n    sendPreinscritToBackend(selectedFile);\n  };\n\n  // Récupération des classes du backend\n  const fetchClasses = async () => {\n    try {\n        const response = await fetch(\"http://localhost:3000/api/classes\", {\n            method: \"GET\", // Le type de la méthode est maintenant GET pour une récupération de données, non POST.\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                \"Content-Type\": \"application/json\"\n            },\n        });\n\n        if (response.ok) {\n            const classData = await response.json();\n\n            // Trier les classes dans l'ordre désiré\n            const order = [\n                \"Petite section\",\n                \"Moyenne section\",\n                \"Grande section\",\n                \"CP\",\n                \"CE1\",\n                \"CE2\",\n                \"CM1\",\n                \"CM2\",\n            ];\n\n            const sortedClasses = classData.sort(\n                (a, b) => order.indexOf(a.classe) - order.indexOf(b.classe)\n            );\n            setClasses(sortedClasses);\n        } else {\n            console.error(\"Erreur lors de la récupération des classes\");\n        }\n    } catch (error) {\n        console.error(\"Erreur lors de la connexion au serveur :\", error);\n    }\n};\n\n\n  // Gestion du fichier des élèves\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n\n    if (selectedFile) {\n      Papa.parse(selectedFile, {\n        complete: (result) => {\n          const formattedData = result.data.map((row) => {\n            const rawDate = row[\"Date de naissance\"]?.trim();\n\n            // Conversion de la date avec `date-fns`\n            let dateDeNaissance = null;\n            try {\n              const parsedDate = parse(rawDate, \"dd/MM/yyyy\", new Date());\n              if (isValid(parsedDate)) {\n                dateDeNaissance = format(parsedDate, \"yyyy-MM-dd\");\n              }\n            } catch (error) {\n              console.error(\"Erreur de format de date :\", rawDate, error);\n            }\n\n            return {\n              nom: row[\"Nom\"]?.trim(),\n              prenom: row[\"Prenom\"]?.trim(),\n              dateDeNaissance: dateDeNaissance, // Format correct ou null\n            };\n          });\n\n          setData(formattedData);\n          sendDataToBackend(formattedData); // Envoi des données transformées\n        },\n        header: true,\n        skipEmptyLines: true,\n      });\n    }\n  };\n\n  // Gestion du fichier des redoublants\n  const handleRedoublantsFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setRedoublantsFile(selectedFile);\n\n    if (selectedFile) {\n      Papa.parse(selectedFile, {\n        complete: (result) => {\n          const formattedData = result.data.map((row) => {\n            const rawDate = row[\"Date de naissance\"]?.trim();\n\n            let dateDeNaissance = null;\n            try {\n              const parsedDate = parse(rawDate, \"dd/MM/yyyy\", new Date()); // Remplacez par le format de vos données\n              if (isValid(parsedDate)) {\n                dateDeNaissance = format(parsedDate, \"yyyy-MM-dd\");\n              } else {\n                console.error(`Date invalide détectée : ${rawDate}`);\n              }\n            } catch (error) {\n              console.error(\n                \"Erreur lors du parsing de la date :\",\n                rawDate,\n                error\n              );\n            }\n\n            return {\n              nom: row[\"Nom\"]?.trim(),\n              prenom: row[\"Prenom\"]?.trim(),\n              dateDeNaissance: dateDeNaissance, // Null si invalide\n            };\n          });\n\n          sendRedoublantsToBackend(formattedData); // Envoyer uniquement les données valides\n        },\n        header: true,\n        skipEmptyLines: true,\n      });\n    }\n  };\n\n  const sendPreinscritToBackend = async (file) => {\n    const formData = new FormData();\n    formData.append(\"preinscrit\", file); // Le champ doit être \"preinscrit\"\n\n    try {\n      const response = await fetch(\"http://localhost:3000/api/preinscrits\", {\n        method: \"POST\",\n        body: formData, // Envoi de FormData qui contient le fichier\n        headers: \n          {\n            'Authorization': `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          },\n      });\n\n      if (response.ok) {\n        alert(\"Les préinscrits ont été enregistrés.\");\n        await fetchPreinscrits(); // Met à jour la liste des préinscrits\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi au serveur:\", error);\n      alert(\"Une erreur est survenue.\");\n    }\n  };\n\n  // Envoi des données des élèves au backend\n  const sendDataToBackend = async (students) => {\n    try {\n      const response = await fetch(\"http://localhost:3000/api/students\", {\n        method: \"POST\",\n        headers: \n          {\n            'Authorization': `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          },\n        body: JSON.stringify({ students }),\n      });\n\n      if (response.ok) {\n        alert(\"Les élèves ont été enregistrés.\");\n        await fetchClasses();\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi au serveur:\", error);\n      alert(\"Une erreur est survenue.\");\n    }\n  };\n\n  // Fonction pour envoyer le fichier à Multer (backend)\n  const sendRedoublantsFileToBackend = async (selectedFile) => {\n    const formData = new FormData();\n    formData.append(\"redoublants\", selectedFile);\n\n    try {\n      const response = await fetch(\"http://localhost:3000/api/update-year\", {\n        method: \"POST\",\n        body: formData,\n        headers: \n          {\n            'Authorization': `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          },\n\n      });\n\n      if (response.ok) {\n        alert(\"Les redoublants ont été enregistrés et l'année mise à jour.\");\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi au serveur:\", error);\n      alert(\"Une erreur est survenue dans la route api/update-year.\");\n    }\n  };\n\n  // Envoi des données formatées des redoublants au backend\n  const sendRedoublantsToBackend = async (redoublants) => {\n    try {\n      const response = await fetch(\n        \"http://localhost:3000/api/validate-redoublants\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ redoublants }), // Conversion en JSON avant l'envoi\n        }\n      );\n\n      if (response.ok) {\n        alert(\"Les redoublants ont été validés.\");\n        await fetchClasses();\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi des redoublants:\", error);\n      alert(\"Une erreur est survenue avec la route validate-redoublants.\");\n    }\n  };\n\n  const role = localStorage.getItem(\"role\");\n  const token = localStorage.getItem(\"token\");\n\n  // Fonction pour archiver l'année scolaire\n  const archiveYear = async () => {\n    try {\n      // Récupérer les classes depuis l'API\n      const response = await fetch(\"http://localhost:5000/api/classes\");\n      if (!response.ok) {\n        console.error(\"Erreur lors de la récupération des classes :\", response.statusText);\n        return;\n      }\n\n      const classData = await response.json();\n\n      if (!Array.isArray(classData) || classData.length === 0) {\n        console.error(\"Aucune classe disponible ou les données sont invalides.\");\n        return;\n      }\n\n      // Trier les classes dans l'ordre désiré\n      const order = [\n        \"Petite section\",\n        \"Moyenne section\",\n        \"Grande section\",\n        \"CP\",\n        \"CE1\",\n        \"CE2\",\n        \"CM1\",\n        \"CM2\",\n      ];\n\n      const sortedClasses = classData.sort(\n        (a, b) => order.indexOf(a.classe) - order.indexOf(b.classe)\n      );\n\n      console.log(\"Classes triées :\", sortedClasses);\n      const currentDate = new Date().toLocaleDateString().replace(/\\//g, \"-\");\n\n      // Générer un fichier PDF contenant les classes triées\n      const pdf = new jsPDF();\n      pdf.text(\"Liste des classes\", 10, 10);\n\n    let pageNumber = 1;\n\n    sortedClasses.forEach((classe, index) => {\n      if (index > 0) {\n        pdf.addPage(); // Ajouter une nouvelle page pour chaque classe, sauf la première\n        pageNumber++;\n      }\n\n      // Titre de la classe (en haut de chaque page)\n      pdf.text(`Classe : ${classe.classe}  ${currentDate}`, 10, 20);\n\n      let yPosition = 30; // Position initiale pour les élèves, après le titre\n\n      // Liste des élèves de la classe\n      classe.students.forEach((student) => {\n        const birthDate = new Date(student.dateDeNaissance).toLocaleDateString();\n        pdf.text(`- ${student.prenom} ${student.nom} (né(e) le ${birthDate})`, 15, yPosition);\n        yPosition += 10;\n\n        // Vérification si la page est pleine\n        if (yPosition > 280) { // Environ 280 pour une page A4 avec des marges\n          pdf.addPage();\n          pageNumber++;\n          pdf.text(`Page ${pageNumber}`, 10, 10);\n          pdf.text(`Classe : ${classe.classe} (suite)`, 10, 20);\n          yPosition = 30;\n        }\n      });\n    });\n\n\n      // Sauvegarder le PDF\n      \n      pdf.save(`classes-${currentDate}.pdf`);\n\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion au serveur :\", error);\n    }\n  };\n\n\n  return (\n    <div className=\"min-h-screen\">\n      <header className=\" text-white p-10 text-center\">\n        <h1 className=\"text-3xl font-bold\">Gestion des Élèves</h1>\n        <p className=\"text-sm mt-2\">\n          Importez et gérez les données de vos élèves.\n        </p>\n        <button onClick={archiveYear} className=\"cursor-pointer bg-red-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-red-700 mt-4\">\n          Archiver l'année scolaire\n        </button>\n      </header>\n\n      <main className=\"mt-10 max-w-7xl mx-auto\">\n        {/* Import des présinscrit */}\n        \n\n        {/* Encadrés côte à côte */}\n        <div className=\"flex justify-between gap-6 mb-10\">\n\n          <section className=\"flex-1 bg-white p-6 rounded-md shadow-md bg-opacity-75\">\n            <h2 className=\"text-2xl font-semibold mb-4\">\n              Importer les présinscrits\n            </h2>\n          <input\n            type=\"file\"\n            accept=\".txt\"\n            onChange={addPreinscrit}\n              className=\"hidden\"\n              id=\"preinscrit-upload\"\n            />\n            <label\n              htmlFor=\"preinscrit-upload\"\n              className=\"cursor-pointer bg-blue-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-blue-700 whitespace-nowrap\"\n            >\n              Choisir un fichier\n            </label>\n          </section>\n          <section className=\"flex-1 bg-white p-6 rounded-md shadow-md bg-opacity-75\">\n            <h2 className=\"text-2xl font-semibold mb-4\">\n              Importer un fichier CSV\n            </h2>\n            <input\n              type=\"file\"\n              accept=\".csv\"\n              onChange={handleFileChange}\n              className=\"hidden\"\n              id=\"file-upload\"\n            />\n            <label\n              htmlFor=\"file-upload\"\n              className=\"whitespace-nowrap cursor-pointer bg-blue-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-blue-700\"\n            >\n              Choisir un fichier\n            </label>\n          </section>\n\n          <section className=\"flex-1 bg-white p-6 rounded-md shadow-md bg-opacity-75\">\n            <h2 className=\"text-2xl font-semibold mb-4\">\n              Indiquer les redoublants\n            </h2>\n            <input\n              type=\"file\"\n              accept=\".csv\"\n              onChange={handleRedoublantsFileChange}\n              className=\"hidden\"\n              id=\"redoublants-upload\"\n            />\n            <label\n              htmlFor=\"redoublants-upload\"\n              className=\" whitespace-nowrap cursor-pointer bg-green-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-green-700\"\n            >\n              Choisir un fichier\n            </label>\n          </section>\n        </div>\n\n        {/* Tableaux des classes */}\n        <section>\n          <div className=\"grid gap-6 sm:grid-cols-2 md:grid-cols-3\">\n            {classes.map((classItem, classIndex) => (\n              <div\n                key={classIndex}\n                className=\"bg-black p-4 rounded-md shadow-md bg-opacity-30 overflow-auto custom-scrollbar max-h-96\"\n              >\n                <h3 className=\" text-white text-xl font-bold mb-2\">{classItem.classe}</h3>\n                {classItem.students.length > 0 ? (\n                  <table className=\" min-w-full border-collapse border-gray-400 \">\n                    <thead className=\" z-10\">\n                      <tr>\n                        <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\n                          Nom\n                        </th>\n                        <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\n                          Prénom\n                        </th>\n                        <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\n                          Date de naissance\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {classItem.students.map((student, studentIndex) => (\n                        <tr key={studentIndex}>\n                          <td className=\"text-white border border-gray-300 px-4 py-2\">\n                            {student.nom}\n                          </td>\n                          <td className=\"text-white border border-gray-300 px-4 py-2\">\n                            {student.prenom}\n                          </td>\n                          <td className=\"text-white border border-gray-300 px-4 py-2\">\n                            {student.dateDeNaissance}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                ) : (\n                  <p>Aucun étudiant dans cette classe.</p>\n                )}\n              </div>\n            ))}\n\n            {/* Tableau des préinscrits */}\n            <div className=\"bg-white p-4 rounded-md shadow-md\">\n              <h3 className=\"text-xl font-bold mb-2\">Préinscrits</h3>\n              {preinscrits.length > 0 ? (\n                <table className=\"w-full border-collapse border border-gray-400\">\n                  <thead>\n                    <tr>\n                      <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\n                        Nom\n                      </th>\n                      <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\n                        Prénom\n                      </th>\n                      <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\n                        Date de naissance\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {preinscrits.map((student, index) => (\n                      <tr key={index}>\n                        <td className=\"border border-gray-300 px-4 py-2\">\n                          {student.nom}\n                        </td>\n                        <td className=\"border border-gray-300 px-4 py-2\">\n                          {student.prenom}\n                        </td>\n                        <td className=\"border border-gray-300 px-4 py-2\">\n                          {student.dateDeNaissance}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              ) : (\n                <p>Aucun préinscrit pour le moment.</p>\n              )}\n            </div>\n          </div>\n        </section>\n      </main>\n    </div>\n        );\n\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,WAAW;AAC5B,SAASC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACjD,SAAQC,KAAK,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACqB,cAAc,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACdsB,YAAY,CAAC,CAAC;IACdC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,aAAa,GAAIC,CAAC,IAAK;IAC3B,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACtCP,iBAAiB,CAACK,YAAY,CAAC;IAC/BG,uBAAuB,CAACH,YAAY,CAAC;EACvC,CAAC;;EAED;EACA,MAAMJ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAC9DC,MAAM,EAAE,KAAK;QAAE;QACfC,OAAO,EAAE;UACL,eAAe,EAAE,UAAUC,KAAK,EAAE;UAClC,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MAEF,IAAIJ,QAAQ,CAACK,EAAE,EAAE;QACb,MAAMC,SAAS,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;;QAEvC;QACA,MAAMC,KAAK,GAAG,CACV,gBAAgB,EAChB,iBAAiB,EACjB,gBAAgB,EAChB,IAAI,EACJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACR;QAED,MAAMC,aAAa,GAAGH,SAAS,CAACI,IAAI,CAChC,CAACC,CAAC,EAAEC,CAAC,KAAKJ,KAAK,CAACK,OAAO,CAACF,CAAC,CAACG,MAAM,CAAC,GAAGN,KAAK,CAACK,OAAO,CAACD,CAAC,CAACE,MAAM,CAC9D,CAAC;QACD3B,UAAU,CAACsB,aAAa,CAAC;MAC7B,CAAC,MAAM;QACHM,OAAO,CAACC,KAAK,CAAC,4CAA4C,CAAC;MAC/D;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IACpE;EACJ,CAAC;;EAGC;EACA,MAAMC,gBAAgB,GAAItB,CAAC,IAAK;IAC9B,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACtCjB,OAAO,CAACe,YAAY,CAAC;IAErB,IAAIA,YAAY,EAAE;MAChBzB,IAAI,CAACC,KAAK,CAACwB,YAAY,EAAE;QACvBsB,QAAQ,EAAGC,MAAM,IAAK;UACpB,MAAMC,aAAa,GAAGD,MAAM,CAACnC,IAAI,CAACqC,GAAG,CAAEC,GAAG,IAAK;YAAA,IAAAC,mBAAA,EAAAC,QAAA,EAAAC,WAAA;YAC7C,MAAMC,OAAO,IAAAH,mBAAA,GAAGD,GAAG,CAAC,mBAAmB,CAAC,cAAAC,mBAAA,uBAAxBA,mBAAA,CAA0BI,IAAI,CAAC,CAAC;;YAEhD;YACA,IAAIC,eAAe,GAAG,IAAI;YAC1B,IAAI;cACF,MAAMC,UAAU,GAAGzD,KAAK,CAACsD,OAAO,EAAE,YAAY,EAAE,IAAII,IAAI,CAAC,CAAC,CAAC;cAC3D,IAAIzD,OAAO,CAACwD,UAAU,CAAC,EAAE;gBACvBD,eAAe,GAAGtD,MAAM,CAACuD,UAAU,EAAE,YAAY,CAAC;cACpD;YACF,CAAC,CAAC,OAAOb,KAAK,EAAE;cACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEU,OAAO,EAAEV,KAAK,CAAC;YAC7D;YAEA,OAAO;cACLe,GAAG,GAAAP,QAAA,GAAEF,GAAG,CAAC,KAAK,CAAC,cAAAE,QAAA,uBAAVA,QAAA,CAAYG,IAAI,CAAC,CAAC;cACvBK,MAAM,GAAAP,WAAA,GAAEH,GAAG,CAAC,QAAQ,CAAC,cAAAG,WAAA,uBAAbA,WAAA,CAAeE,IAAI,CAAC,CAAC;cAC7BC,eAAe,EAAEA,eAAe,CAAE;YACpC,CAAC;UACH,CAAC,CAAC;UAEF3C,OAAO,CAACmC,aAAa,CAAC;UACtBa,iBAAiB,CAACb,aAAa,CAAC,CAAC,CAAC;QACpC,CAAC;QACDc,MAAM,EAAE,IAAI;QACZC,cAAc,EAAE;MAClB,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAMC,2BAA2B,GAAIzC,CAAC,IAAK;IACzC,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACtCf,kBAAkB,CAACa,YAAY,CAAC;IAEhC,IAAIA,YAAY,EAAE;MAChBzB,IAAI,CAACC,KAAK,CAACwB,YAAY,EAAE;QACvBsB,QAAQ,EAAGC,MAAM,IAAK;UACpB,MAAMC,aAAa,GAAGD,MAAM,CAACnC,IAAI,CAACqC,GAAG,CAAEC,GAAG,IAAK;YAAA,IAAAe,oBAAA,EAAAC,SAAA,EAAAC,YAAA;YAC7C,MAAMb,OAAO,IAAAW,oBAAA,GAAGf,GAAG,CAAC,mBAAmB,CAAC,cAAAe,oBAAA,uBAAxBA,oBAAA,CAA0BV,IAAI,CAAC,CAAC;YAEhD,IAAIC,eAAe,GAAG,IAAI;YAC1B,IAAI;cACF,MAAMC,UAAU,GAAGzD,KAAK,CAACsD,OAAO,EAAE,YAAY,EAAE,IAAII,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;cAC7D,IAAIzD,OAAO,CAACwD,UAAU,CAAC,EAAE;gBACvBD,eAAe,GAAGtD,MAAM,CAACuD,UAAU,EAAE,YAAY,CAAC;cACpD,CAAC,MAAM;gBACLd,OAAO,CAACC,KAAK,CAAC,4BAA4BU,OAAO,EAAE,CAAC;cACtD;YACF,CAAC,CAAC,OAAOV,KAAK,EAAE;cACdD,OAAO,CAACC,KAAK,CACX,qCAAqC,EACrCU,OAAO,EACPV,KACF,CAAC;YACH;YAEA,OAAO;cACLe,GAAG,GAAAO,SAAA,GAAEhB,GAAG,CAAC,KAAK,CAAC,cAAAgB,SAAA,uBAAVA,SAAA,CAAYX,IAAI,CAAC,CAAC;cACvBK,MAAM,GAAAO,YAAA,GAAEjB,GAAG,CAAC,QAAQ,CAAC,cAAAiB,YAAA,uBAAbA,YAAA,CAAeZ,IAAI,CAAC,CAAC;cAC7BC,eAAe,EAAEA,eAAe,CAAE;YACpC,CAAC;UACH,CAAC,CAAC;UAEFY,wBAAwB,CAACpB,aAAa,CAAC,CAAC,CAAC;QAC3C,CAAC;QACDc,MAAM,EAAE,IAAI;QACZC,cAAc,EAAE;MAClB,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMpC,uBAAuB,GAAG,MAAOnB,IAAI,IAAK;IAC9C,MAAM6D,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE/D,IAAI,CAAC,CAAC,CAAC;;IAErC,IAAI;MACF,MAAMoB,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACd0C,IAAI,EAAEH,QAAQ;QAAE;QAChBtC,OAAO,EACL;UACE,eAAe,EAAE,UAAUC,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB;MACJ,CAAC,CAAC;MAEF,IAAIJ,QAAQ,CAACK,EAAE,EAAE;QACfwC,KAAK,CAAC,sCAAsC,CAAC;QAC7C,MAAMpD,gBAAgB,CAAC,CAAC,CAAC,CAAC;MAC5B,CAAC,MAAM;QACL,MAAMqD,SAAS,GAAG,MAAM9C,QAAQ,CAACO,IAAI,CAAC,CAAC;QACvCsC,KAAK,CAAC,YAAYC,SAAS,CAACC,OAAO,EAAE,CAAC;MACxC;IACF,CAAC,CAAC,OAAO/B,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD6B,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF,CAAC;;EAED;EACA,MAAMZ,iBAAiB,GAAG,MAAOe,QAAQ,IAAK;IAC5C,IAAI;MACF,MAAMhD,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QACjEC,MAAM,EAAE,MAAM;QACdC,OAAO,EACL;UACE,eAAe,EAAE,UAAUC,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB,CAAC;QACHwC,IAAI,EAAEK,IAAI,CAACC,SAAS,CAAC;UAAEF;QAAS,CAAC;MACnC,CAAC,CAAC;MAEF,IAAIhD,QAAQ,CAACK,EAAE,EAAE;QACfwC,KAAK,CAAC,iCAAiC,CAAC;QACxC,MAAMrD,YAAY,CAAC,CAAC;MACtB,CAAC,MAAM;QACL,MAAMsD,SAAS,GAAG,MAAM9C,QAAQ,CAACO,IAAI,CAAC,CAAC;QACvCsC,KAAK,CAAC,YAAYC,SAAS,CAACC,OAAO,EAAE,CAAC;MACxC;IACF,CAAC,CAAC,OAAO/B,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD6B,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF,CAAC;;EAED;EACA,MAAMM,4BAA4B,GAAG,MAAOvD,YAAY,IAAK;IAC3D,MAAM6C,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE/C,YAAY,CAAC;IAE5C,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACd0C,IAAI,EAAEH,QAAQ;QACdtC,OAAO,EACL;UACE,eAAe,EAAE,UAAUC,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB;MAEJ,CAAC,CAAC;MAEF,IAAIJ,QAAQ,CAACK,EAAE,EAAE;QACfwC,KAAK,CAAC,6DAA6D,CAAC;MACtE,CAAC,MAAM;QACL,MAAMC,SAAS,GAAG,MAAM9C,QAAQ,CAACO,IAAI,CAAC,CAAC;QACvCsC,KAAK,CAAC,YAAYC,SAAS,CAACC,OAAO,EAAE,CAAC;MACxC;IACF,CAAC,CAAC,OAAO/B,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD6B,KAAK,CAAC,wDAAwD,CAAC;IACjE;EACF,CAAC;;EAED;EACA,MAAML,wBAAwB,GAAG,MAAOY,WAAW,IAAK;IACtD,IAAI;MACF,MAAMpD,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gDAAgD,EAChD;QACEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDyC,IAAI,EAAEK,IAAI,CAACC,SAAS,CAAC;UAAEE;QAAY,CAAC,CAAC,CAAE;MACzC,CACF,CAAC;MAED,IAAIpD,QAAQ,CAACK,EAAE,EAAE;QACfwC,KAAK,CAAC,kCAAkC,CAAC;QACzC,MAAMrD,YAAY,CAAC,CAAC;MACtB,CAAC,MAAM;QACL,MAAMsD,SAAS,GAAG,MAAM9C,QAAQ,CAACO,IAAI,CAAC,CAAC;QACvCsC,KAAK,CAAC,YAAYC,SAAS,CAACC,OAAO,EAAE,CAAC;MACxC;IACF,CAAC,CAAC,OAAO/B,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD6B,KAAK,CAAC,6DAA6D,CAAC;IACtE;EACF,CAAC;EAED,MAAMQ,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACzC,MAAMnD,KAAK,GAAGkD,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;EAE3C;EACA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF;MACA,MAAMxD,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;MACjE,IAAI,CAACD,QAAQ,CAACK,EAAE,EAAE;QAChBU,OAAO,CAACC,KAAK,CAAC,8CAA8C,EAAEhB,QAAQ,CAACyD,UAAU,CAAC;QAClF;MACF;MAEA,MAAMnD,SAAS,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAEvC,IAAI,CAACmD,KAAK,CAACC,OAAO,CAACrD,SAAS,CAAC,IAAIA,SAAS,CAACsD,MAAM,KAAK,CAAC,EAAE;QACvD7C,OAAO,CAACC,KAAK,CAAC,yDAAyD,CAAC;QACxE;MACF;;MAEA;MACA,MAAMR,KAAK,GAAG,CACZ,gBAAgB,EAChB,iBAAiB,EACjB,gBAAgB,EAChB,IAAI,EACJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;MAED,MAAMC,aAAa,GAAGH,SAAS,CAACI,IAAI,CAClC,CAACC,CAAC,EAAEC,CAAC,KAAKJ,KAAK,CAACK,OAAO,CAACF,CAAC,CAACG,MAAM,CAAC,GAAGN,KAAK,CAACK,OAAO,CAACD,CAAC,CAACE,MAAM,CAC5D,CAAC;MAEDC,OAAO,CAAC8C,GAAG,CAAC,kBAAkB,EAAEpD,aAAa,CAAC;MAC9C,MAAMqD,WAAW,GAAG,IAAIhC,IAAI,CAAC,CAAC,CAACiC,kBAAkB,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;;MAEvE;MACA,MAAMC,GAAG,GAAG,IAAI1F,KAAK,CAAC,CAAC;MACvB0F,GAAG,CAACC,IAAI,CAAC,mBAAmB,EAAE,EAAE,EAAE,EAAE,CAAC;MAEvC,IAAIC,UAAU,GAAG,CAAC;MAElB1D,aAAa,CAAC2D,OAAO,CAAC,CAACtD,MAAM,EAAEuD,KAAK,KAAK;QACvC,IAAIA,KAAK,GAAG,CAAC,EAAE;UACbJ,GAAG,CAACK,OAAO,CAAC,CAAC,CAAC,CAAC;UACfH,UAAU,EAAE;QACd;;QAEA;QACAF,GAAG,CAACC,IAAI,CAAC,YAAYpD,MAAM,CAACA,MAAM,KAAKgD,WAAW,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAE7D,IAAIS,SAAS,GAAG,EAAE,CAAC,CAAC;;QAEpB;QACAzD,MAAM,CAACkC,QAAQ,CAACoB,OAAO,CAAEI,OAAO,IAAK;UACnC,MAAMC,SAAS,GAAG,IAAI3C,IAAI,CAAC0C,OAAO,CAAC5C,eAAe,CAAC,CAACmC,kBAAkB,CAAC,CAAC;UACxEE,GAAG,CAACC,IAAI,CAAC,KAAKM,OAAO,CAACxC,MAAM,IAAIwC,OAAO,CAACzC,GAAG,cAAc0C,SAAS,GAAG,EAAE,EAAE,EAAEF,SAAS,CAAC;UACrFA,SAAS,IAAI,EAAE;;UAEf;UACA,IAAIA,SAAS,GAAG,GAAG,EAAE;YAAE;YACrBN,GAAG,CAACK,OAAO,CAAC,CAAC;YACbH,UAAU,EAAE;YACZF,GAAG,CAACC,IAAI,CAAC,QAAQC,UAAU,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YACtCF,GAAG,CAACC,IAAI,CAAC,YAAYpD,MAAM,CAACA,MAAM,UAAU,EAAE,EAAE,EAAE,EAAE,CAAC;YACrDyD,SAAS,GAAG,EAAE;UAChB;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;;MAGA;;MAEAN,GAAG,CAACS,IAAI,CAAC,WAAWZ,WAAW,MAAM,CAAC;IAExC,CAAC,CAAC,OAAO9C,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAClE;EACF,CAAC;EAGD,oBACEvC,OAAA;IAAKkG,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BnG,OAAA;MAAQkG,SAAS,EAAC,8BAA8B;MAAAC,QAAA,gBAC9CnG,OAAA;QAAIkG,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1DvG,OAAA;QAAGkG,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAE5B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJvG,OAAA;QAAQwG,OAAO,EAAEzB,WAAY;QAACmB,SAAS,EAAC,uGAAuG;QAAAC,QAAA,EAAC;MAEhJ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAETvG,OAAA;MAAMkG,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBAKvCnG,OAAA;QAAKkG,SAAS,EAAC,kCAAkC;QAAAC,QAAA,gBAE/CnG,OAAA;UAASkG,SAAS,EAAC,wDAAwD;UAAAC,QAAA,gBACzEnG,OAAA;YAAIkG,SAAS,EAAC,6BAA6B;YAAAC,QAAA,EAAC;UAE5C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACPvG,OAAA;YACEyG,IAAI,EAAC,MAAM;YACXC,MAAM,EAAC,MAAM;YACbC,QAAQ,EAAE1F,aAAc;YACtBiF,SAAS,EAAC,QAAQ;YAClBU,EAAE,EAAC;UAAmB;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC,eACFvG,OAAA;YACE6G,OAAO,EAAC,mBAAmB;YAC3BX,SAAS,EAAC,sHAAsH;YAAAC,QAAA,EACjI;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACVvG,OAAA;UAASkG,SAAS,EAAC,wDAAwD;UAAAC,QAAA,gBACzEnG,OAAA;YAAIkG,SAAS,EAAC,6BAA6B;YAAAC,QAAA,EAAC;UAE5C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACLvG,OAAA;YACEyG,IAAI,EAAC,MAAM;YACXC,MAAM,EAAC,MAAM;YACbC,QAAQ,EAAEnE,gBAAiB;YAC3B0D,SAAS,EAAC,QAAQ;YAClBU,EAAE,EAAC;UAAa;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC,eACFvG,OAAA;YACE6G,OAAO,EAAC,aAAa;YACrBX,SAAS,EAAC,sHAAsH;YAAAC,QAAA,EACjI;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAEVvG,OAAA;UAASkG,SAAS,EAAC,wDAAwD;UAAAC,QAAA,gBACzEnG,OAAA;YAAIkG,SAAS,EAAC,6BAA6B;YAAAC,QAAA,EAAC;UAE5C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACLvG,OAAA;YACEyG,IAAI,EAAC,MAAM;YACXC,MAAM,EAAC,MAAM;YACbC,QAAQ,EAAEhD,2BAA4B;YACtCuC,SAAS,EAAC,QAAQ;YAClBU,EAAE,EAAC;UAAoB;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,eACFvG,OAAA;YACE6G,OAAO,EAAC,oBAAoB;YAC5BX,SAAS,EAAC,yHAAyH;YAAAC,QAAA,EACpI;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eAGNvG,OAAA;QAAAmG,QAAA,eACEnG,OAAA;UAAKkG,SAAS,EAAC,0CAA0C;UAAAC,QAAA,GACtD1F,OAAO,CAACmC,GAAG,CAAC,CAACkE,SAAS,EAAEC,UAAU,kBACjC/G,OAAA;YAEEkG,SAAS,EAAC,yFAAyF;YAAAC,QAAA,gBAEnGnG,OAAA;cAAIkG,SAAS,EAAC,oCAAoC;cAAAC,QAAA,EAAEW,SAAS,CAACzE;YAAM;cAAA+D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EACzEO,SAAS,CAACvC,QAAQ,CAACY,MAAM,GAAG,CAAC,gBAC5BnF,OAAA;cAAOkG,SAAS,EAAC,8CAA8C;cAAAC,QAAA,gBAC7DnG,OAAA;gBAAOkG,SAAS,EAAC,OAAO;gBAAAC,QAAA,eACtBnG,OAAA;kBAAAmG,QAAA,gBACEnG,OAAA;oBAAIkG,SAAS,EAAC,8CAA8C;oBAAAC,QAAA,EAAC;kBAE7D;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACLvG,OAAA;oBAAIkG,SAAS,EAAC,8CAA8C;oBAAAC,QAAA,EAAC;kBAE7D;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACLvG,OAAA;oBAAIkG,SAAS,EAAC,8CAA8C;oBAAAC,QAAA,EAAC;kBAE7D;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACRvG,OAAA;gBAAAmG,QAAA,EACGW,SAAS,CAACvC,QAAQ,CAAC3B,GAAG,CAAC,CAACmD,OAAO,EAAEiB,YAAY,kBAC5ChH,OAAA;kBAAAmG,QAAA,gBACEnG,OAAA;oBAAIkG,SAAS,EAAC,6CAA6C;oBAAAC,QAAA,EACxDJ,OAAO,CAACzC;kBAAG;oBAAA8C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACV,CAAC,eACLvG,OAAA;oBAAIkG,SAAS,EAAC,6CAA6C;oBAAAC,QAAA,EACxDJ,OAAO,CAACxC;kBAAM;oBAAA6C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACb,CAAC,eACLvG,OAAA;oBAAIkG,SAAS,EAAC,6CAA6C;oBAAAC,QAAA,EACxDJ,OAAO,CAAC5C;kBAAe;oBAAAiD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACtB,CAAC;gBAAA,GATES,YAAY;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAUjB,CACL;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,gBAERvG,OAAA;cAAAmG,QAAA,EAAG;YAAiC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CACxC;UAAA,GArCIQ,UAAU;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsCZ,CACN,CAAC,eAGFvG,OAAA;YAAKkG,SAAS,EAAC,mCAAmC;YAAAC,QAAA,gBAChDnG,OAAA;cAAIkG,SAAS,EAAC,wBAAwB;cAAAC,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACtD5F,WAAW,CAACwE,MAAM,GAAG,CAAC,gBACrBnF,OAAA;cAAOkG,SAAS,EAAC,+CAA+C;cAAAC,QAAA,gBAC9DnG,OAAA;gBAAAmG,QAAA,eACEnG,OAAA;kBAAAmG,QAAA,gBACEnG,OAAA;oBAAIkG,SAAS,EAAC,8CAA8C;oBAAAC,QAAA,EAAC;kBAE7D;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACLvG,OAAA;oBAAIkG,SAAS,EAAC,8CAA8C;oBAAAC,QAAA,EAAC;kBAE7D;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACLvG,OAAA;oBAAIkG,SAAS,EAAC,8CAA8C;oBAAAC,QAAA,EAAC;kBAE7D;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACRvG,OAAA;gBAAAmG,QAAA,EACGxF,WAAW,CAACiC,GAAG,CAAC,CAACmD,OAAO,EAAEH,KAAK,kBAC9B5F,OAAA;kBAAAmG,QAAA,gBACEnG,OAAA;oBAAIkG,SAAS,EAAC,kCAAkC;oBAAAC,QAAA,EAC7CJ,OAAO,CAACzC;kBAAG;oBAAA8C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACV,CAAC,eACLvG,OAAA;oBAAIkG,SAAS,EAAC,kCAAkC;oBAAAC,QAAA,EAC7CJ,OAAO,CAACxC;kBAAM;oBAAA6C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACb,CAAC,eACLvG,OAAA;oBAAIkG,SAAS,EAAC,kCAAkC;oBAAAC,QAAA,EAC7CJ,OAAO,CAAC5C;kBAAe;oBAAAiD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACtB,CAAC;gBAAA,GATEX,KAAK;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAUV,CACL;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,gBAERvG,OAAA;cAAAmG,QAAA,EAAG;YAAgC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CACvC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAGV;AAACrG,EAAA,CAlfQD,GAAG;AAAAgH,EAAA,GAAHhH,GAAG;AAofZ,eAAeA,GAAG;AAAC,IAAAgH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}