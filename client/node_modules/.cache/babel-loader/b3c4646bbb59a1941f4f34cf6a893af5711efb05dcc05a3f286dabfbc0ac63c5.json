{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\4DEVS\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport { parse, isValid, format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [redoublantsFile, setRedoublantsFile] = useState(null); // Nouveau fichier pour les redoublants\n  const [data, setData] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [preinscrits, setPreinscrits] = useState([]);\n  const [preinscritFile, setPreinscritFile] = useState(null);\n  useEffect(() => {\n    fetchClasses();\n    fetchPreinscrits();\n  }, []);\n  const addPreinscrit = e => {\n    const selectedFile = e.target.files[0];\n    setPreinscritFile(selectedFile);\n    sendPreinscritToBackend(selectedFile);\n  };\n  const sendPreinscritToBackend = async file => {\n    const reader = new FileReader();\n    reader.onload = async e => {\n      const fileContent = e.target.result; // Contenu du fichier\n\n      try {\n        // Si le serveur attend un tableau ou un autre format, modifie l'envoi ici\n        const parsedData = Papa.parse(fileContent, {\n          header: true,\n          skipEmptyLines: true\n        }).data;\n        const response = await fetch(\"http://localhost:5000/api/preinscrits\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\" // Déclare que le corps de la requête est en JSON\n          },\n          body: JSON.stringify({\n            preinscrits: parsedData\n          }) // Envoi d'un tableau ou autre format\n        });\n        if (response.ok) {\n          alert(\"Les préinscrits ont été enregistrés.\");\n        } else {\n          const errorData = await response.json();\n          alert(`Erreur : ${errorData.message}`);\n        }\n      } catch (error) {\n        console.error(\"Erreur d'envoi au serveur:\", error);\n        alert(\"Une erreur est survenue.\");\n      }\n    };\n    reader.readAsText(file); // Lit le fichier comme texte\n  };\n\n  // Récupération des classes du backend\n  const fetchClasses = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/classes\");\n      if (response.ok) {\n        const classData = await response.json();\n\n        // Trier les classes dans l'ordre désiré\n        const order = [\"Petite section\", \"Moyenne section\", \"Grande section\", \"CP\", \"CE1\", \"CE2\", \"CM1\", \"CM2\"];\n        const sortedClasses = classData.sort((a, b) => order.indexOf(a.classe) - order.indexOf(b.classe));\n        setClasses(sortedClasses);\n      } else {\n        console.error(\"Erreur lors de la récupération des classes\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion au serveur :\", error);\n    }\n  };\n\n  // Fonction pour récupérer les préinscrits depuis le backend\n  const fetchPreinscrits = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/preinscrits\");\n      if (response.ok) {\n        const preinscritsData = await response.json();\n        setPreinscrits(preinscritsData);\n      } else {\n        console.error(\"Erreur lors de la récupération des préinscrits\");\n      }\n    } catch (error) {\n      console.error(\"Erreur de connexion au serveur :\", error);\n    }\n  };\n\n  // Gestion du fichier des élèves\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    if (selectedFile) {\n      Papa.parse(selectedFile, {\n        complete: result => {\n          const formattedData = result.data.map(row => {\n            var _row$DateDeNaissanc, _row$Nom, _row$Prenom;\n            const rawDate = (_row$DateDeNaissanc = row[\"Date de naissance\"]) === null || _row$DateDeNaissanc === void 0 ? void 0 : _row$DateDeNaissanc.trim();\n\n            // Conversion de la date avec `date-fns`\n            let dateDeNaissance = null;\n            try {\n              const parsedDate = parse(rawDate, \"dd/MM/yyyy\", new Date());\n              if (isValid(parsedDate)) {\n                dateDeNaissance = format(parsedDate, \"yyyy-MM-dd\");\n              }\n            } catch (error) {\n              console.error(\"Erreur de format de date :\", rawDate, error);\n            }\n            return {\n              nom: (_row$Nom = row[\"Nom\"]) === null || _row$Nom === void 0 ? void 0 : _row$Nom.trim(),\n              prenom: (_row$Prenom = row[\"Prenom\"]) === null || _row$Prenom === void 0 ? void 0 : _row$Prenom.trim(),\n              dateDeNaissance: dateDeNaissance // Format correct ou null\n            };\n          });\n          setData(formattedData);\n          sendDataToBackend(formattedData); // Envoi des données transformées\n        },\n        header: true,\n        skipEmptyLines: true\n      });\n    }\n  };\n\n  // Gestion du fichier des redoublants\n  const handleRedoublantsFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setRedoublantsFile(selectedFile);\n    if (selectedFile) {\n      Papa.parse(selectedFile, {\n        complete: result => {\n          const formattedData = result.data.map(row => {\n            var _row$DateDeNaissanc2, _row$Nom2, _row$Prenom2;\n            const rawDate = (_row$DateDeNaissanc2 = row[\"Date de naissance\"]) === null || _row$DateDeNaissanc2 === void 0 ? void 0 : _row$DateDeNaissanc2.trim();\n            let dateDeNaissance = null;\n            try {\n              const parsedDate = parse(rawDate, \"dd/MM/yyyy\", new Date()); // Remplacez par le format de vos données\n              if (isValid(parsedDate)) {\n                dateDeNaissance = format(parsedDate, \"yyyy-MM-dd\");\n              } else {\n                console.error(`Date invalide détectée : ${rawDate}`);\n              }\n            } catch (error) {\n              console.error(\"Erreur lors du parsing de la date :\", rawDate, error);\n            }\n            return {\n              nom: (_row$Nom2 = row[\"Nom\"]) === null || _row$Nom2 === void 0 ? void 0 : _row$Nom2.trim(),\n              prenom: (_row$Prenom2 = row[\"Prenom\"]) === null || _row$Prenom2 === void 0 ? void 0 : _row$Prenom2.trim(),\n              dateDeNaissance: dateDeNaissance // Null si invalide\n            };\n          });\n          sendRedoublantsToBackend(formattedData); // Envoyer uniquement les données valides\n        },\n        header: true,\n        skipEmptyLines: true\n      });\n    }\n  };\n\n  // Envoi des données des élèves au backend\n  const sendDataToBackend = async students => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/students\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          students\n        })\n      });\n      if (response.ok) {\n        alert(\"Les élèves ont été enregistrés.\");\n        await fetchClasses();\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi au serveur:\", error);\n      alert(\"Une erreur est survenue.\");\n    }\n  };\n\n  // Fonction pour envoyer le fichier à Multer (backend)\n  const sendRedoublantsFileToBackend = async selectedFile => {\n    const formData = new FormData();\n    formData.append(\"redoublants\", selectedFile);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/update-year\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        alert(\"Les redoublants ont été enregistrés et l'année mise à jour.\");\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi au serveur:\", error);\n      alert(\"Une erreur est survenue dans la route api/update-year.\");\n    }\n  };\n\n  // Envoi des données formatées des redoublants au backend\n  const sendRedoublantsToBackend = async redoublants => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/validate-redoublants\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          redoublants\n        }) // Conversion en JSON avant l'envoi\n      });\n      if (response.ok) {\n        alert(\"Les redoublants ont été validés.\");\n        await fetchClasses();\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi des redoublants:\", error);\n      alert(\"Une erreur est survenue avec la route validate-redoublants.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 py-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-blue-600 text-white p-6 text-center rounded-md shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"Gestion des \\xC9l\\xE8ves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm mt-2\",\n        children: \"Importez et g\\xE9rez les donn\\xE9es de vos \\xE9l\\xE8ves.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"mt-10 max-w-7xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Importer un fichier CSV pour les pr\\xE9sinscrits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".txt\",\n          onChange: addPreinscrit,\n          className: \"border p-2 m-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between gap-6 mb-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"flex-1 bg-white p-6 rounded-md shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4\",\n            children: \"Importer un fichier CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: handleFileChange,\n            className: \"hidden\",\n            id: \"file-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            className: \"cursor-pointer bg-blue-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-blue-700\",\n            children: \"Choisir un fichier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"flex-1 bg-white p-6 rounded-md shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4\",\n            children: \"Indiquer les redoublants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: handleRedoublantsFileChange,\n            className: \"hidden\",\n            id: \"redoublants-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"redoublants-upload\",\n            className: \"cursor-pointer bg-green-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-green-700\",\n            children: \"Choisir un fichier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-3 gap-6\",\n        children: [classes.map((classItem, classIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-md shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold mb-2\",\n            children: classItem.classe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this), classItem.students.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"w-full border-collapse border border-gray-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                  children: \"Nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                  children: \"Pr\\xE9nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                  children: \"Date de naissance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: classItem.students.map((student, studentIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border border-gray-300 px-4 py-2\",\n                  children: student.nom\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border border-gray-300 px-4 py-2\",\n                  children: student.prenom\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border border-gray-300 px-4 py-2\",\n                  children: student.dateDeNaissance\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 25\n                }, this)]\n              }, studentIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Aucun \\xE9tudiant dans cette classe.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 17\n          }, this)]\n        }, classIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-md shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold mb-2\",\n            children: \"Pr\\xE9inscrits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), preinscrits.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"w-full border-collapse border border-gray-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                  children: \"Nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                  children: \"Pr\\xE9nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                  children: \"Date de naissance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: preinscrits.map((student, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border border-gray-300 px-4 py-2\",\n                  children: student.nom\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border border-gray-300 px-4 py-2\",\n                  children: student.prenom\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border border-gray-300 px-4 py-2\",\n                  children: student.dateDeNaissance\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Aucun pr\\xE9inscrit pour le moment.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5OHKAFSMqX2H1ut/WJanaStLJqk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Papa","parse","isValid","format","jsxDEV","_jsxDEV","App","_s","file","setFile","redoublantsFile","setRedoublantsFile","data","setData","classes","setClasses","preinscrits","setPreinscrits","preinscritFile","setPreinscritFile","fetchClasses","fetchPreinscrits","addPreinscrit","e","selectedFile","target","files","sendPreinscritToBackend","reader","FileReader","onload","fileContent","result","parsedData","header","skipEmptyLines","response","fetch","method","headers","body","JSON","stringify","ok","alert","errorData","json","message","error","console","readAsText","classData","order","sortedClasses","sort","a","b","indexOf","classe","preinscritsData","handleFileChange","complete","formattedData","map","row","_row$DateDeNaissanc","_row$Nom","_row$Prenom","rawDate","trim","dateDeNaissance","parsedDate","Date","nom","prenom","sendDataToBackend","handleRedoublantsFileChange","_row$DateDeNaissanc2","_row$Nom2","_row$Prenom2","sendRedoublantsToBackend","students","sendRedoublantsFileToBackend","formData","FormData","append","redoublants","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","id","htmlFor","classItem","classIndex","length","student","studentIndex","index","_c","$RefreshReg$"],"sources":["C:/code/4DEVS/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport { parse, isValid, format } from \"date-fns\";\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [redoublantsFile, setRedoublantsFile] = useState(null); // Nouveau fichier pour les redoublants\r\n  const [data, setData] = useState([]);\r\n  const [classes, setClasses] = useState([]);\r\n  const [preinscrits, setPreinscrits] = useState([]);\r\n  const [preinscritFile, setPreinscritFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchClasses();\r\n    fetchPreinscrits();\r\n  }, []);\r\n\r\n  const addPreinscrit = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    setPreinscritFile(selectedFile);\r\n    sendPreinscritToBackend(selectedFile);\r\n  };\r\n\r\n  const sendPreinscritToBackend = async (file) => {\r\n    const reader = new FileReader();\r\n  \r\n    reader.onload = async (e) => {\r\n      const fileContent = e.target.result; // Contenu du fichier\r\n  \r\n      try {\r\n        // Si le serveur attend un tableau ou un autre format, modifie l'envoi ici\r\n        const parsedData = Papa.parse(fileContent, { header: true, skipEmptyLines: true }).data;\r\n        const response = await fetch(\"http://localhost:5000/api/preinscrits\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\", // Déclare que le corps de la requête est en JSON\r\n          },\r\n          body: JSON.stringify({ preinscrits: parsedData }), // Envoi d'un tableau ou autre format\r\n        });\r\n  \r\n        if (response.ok) {\r\n          alert(\"Les préinscrits ont été enregistrés.\");\r\n        } else {\r\n          const errorData = await response.json();\r\n          alert(`Erreur : ${errorData.message}`);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Erreur d'envoi au serveur:\", error);\r\n        alert(\"Une erreur est survenue.\");\r\n      }\r\n    };\r\n  \r\n    reader.readAsText(file); // Lit le fichier comme texte\r\n};\r\n\r\n  \r\n  \r\n\r\n  // Récupération des classes du backend\r\n  const fetchClasses = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/classes\");\r\n      if (response.ok) {\r\n        const classData = await response.json();\r\n\r\n        // Trier les classes dans l'ordre désiré\r\n        const order = [\r\n          \"Petite section\",\r\n          \"Moyenne section\",\r\n          \"Grande section\",\r\n          \"CP\",\r\n          \"CE1\",\r\n          \"CE2\",\r\n          \"CM1\",\r\n          \"CM2\",\r\n        ];\r\n\r\n        const sortedClasses = classData.sort(\r\n          (a, b) => order.indexOf(a.classe) - order.indexOf(b.classe)\r\n        );\r\n        setClasses(sortedClasses);\r\n      } else {\r\n        console.error(\"Erreur lors de la récupération des classes\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la connexion au serveur :\", error);\r\n    }\r\n  };\r\n\r\n  // Fonction pour récupérer les préinscrits depuis le backend\r\n  const fetchPreinscrits = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/preinscrits\");\r\n      if (response.ok) {\r\n        const preinscritsData = await response.json();\r\n        setPreinscrits(preinscritsData);\r\n      } else {\r\n        console.error(\"Erreur lors de la récupération des préinscrits\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur de connexion au serveur :\", error);\r\n    }\r\n  };\r\n\r\n  // Gestion du fichier des élèves\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    setFile(selectedFile);\r\n\r\n    if (selectedFile) {\r\n      Papa.parse(selectedFile, {\r\n        complete: (result) => {\r\n          const formattedData = result.data.map((row) => {\r\n            const rawDate = row[\"Date de naissance\"]?.trim();\r\n\r\n            // Conversion de la date avec `date-fns`\r\n            let dateDeNaissance = null;\r\n            try {\r\n              const parsedDate = parse(rawDate, \"dd/MM/yyyy\", new Date());\r\n              if (isValid(parsedDate)) {\r\n                dateDeNaissance = format(parsedDate, \"yyyy-MM-dd\");\r\n              }\r\n            } catch (error) {\r\n              console.error(\"Erreur de format de date :\", rawDate, error);\r\n            }\r\n\r\n            return {\r\n              nom: row[\"Nom\"]?.trim(),\r\n              prenom: row[\"Prenom\"]?.trim(),\r\n              dateDeNaissance: dateDeNaissance, // Format correct ou null\r\n            };\r\n          });\r\n\r\n          setData(formattedData);\r\n          sendDataToBackend(formattedData); // Envoi des données transformées\r\n        },\r\n        header: true,\r\n        skipEmptyLines: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Gestion du fichier des redoublants\r\n  const handleRedoublantsFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    setRedoublantsFile(selectedFile);\r\n\r\n    if (selectedFile) {\r\n      Papa.parse(selectedFile, {\r\n        complete: (result) => {\r\n          const formattedData = result.data.map((row) => {\r\n            const rawDate = row[\"Date de naissance\"]?.trim();\r\n\r\n            let dateDeNaissance = null;\r\n            try {\r\n              const parsedDate = parse(rawDate, \"dd/MM/yyyy\", new Date()); // Remplacez par le format de vos données\r\n              if (isValid(parsedDate)) {\r\n                dateDeNaissance = format(parsedDate, \"yyyy-MM-dd\");\r\n              } else {\r\n                console.error(`Date invalide détectée : ${rawDate}`);\r\n              }\r\n            } catch (error) {\r\n              console.error(\r\n                \"Erreur lors du parsing de la date :\",\r\n                rawDate,\r\n                error\r\n              );\r\n            }\r\n\r\n            return {\r\n              nom: row[\"Nom\"]?.trim(),\r\n              prenom: row[\"Prenom\"]?.trim(),\r\n              dateDeNaissance: dateDeNaissance, // Null si invalide\r\n            };\r\n          });\r\n\r\n          sendRedoublantsToBackend(formattedData); // Envoyer uniquement les données valides\r\n        },\r\n        header: true,\r\n        skipEmptyLines: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Envoi des données des élèves au backend\r\n  const sendDataToBackend = async (students) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/students\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ students }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"Les élèves ont été enregistrés.\");\r\n        await fetchClasses();\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(`Erreur : ${errorData.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur d'envoi au serveur:\", error);\r\n      alert(\"Une erreur est survenue.\");\r\n    }\r\n  };\r\n\r\n  // Fonction pour envoyer le fichier à Multer (backend)\r\n  const sendRedoublantsFileToBackend = async (selectedFile) => {\r\n    const formData = new FormData();\r\n    formData.append(\"redoublants\", selectedFile);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/update-year\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"Les redoublants ont été enregistrés et l'année mise à jour.\");\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(`Erreur : ${errorData.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur d'envoi au serveur:\", error);\r\n      alert(\"Une erreur est survenue dans la route api/update-year.\");\r\n    }\r\n  };\r\n\r\n  // Envoi des données formatées des redoublants au backend\r\n  const sendRedoublantsToBackend = async (redoublants) => {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:5000/api/validate-redoublants\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ redoublants }), // Conversion en JSON avant l'envoi\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        alert(\"Les redoublants ont été validés.\");\r\n        await fetchClasses();\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(`Erreur : ${errorData.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur d'envoi des redoublants:\", error);\r\n      alert(\"Une erreur est survenue avec la route validate-redoublants.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 py-10\">\r\n      <header className=\"bg-blue-600 text-white p-6 text-center rounded-md shadow-md\">\r\n        <h1 className=\"text-3xl font-bold\">Gestion des Élèves</h1>\r\n        <p className=\"text-sm mt-2\">\r\n          Importez et gérez les données de vos élèves.\r\n        </p>\r\n      </header>\r\n\r\n      <main className=\"mt-10 max-w-7xl mx-auto\">\r\n        {/* Import des présinscrit */}\r\n        <section>\r\n          <h2>Importer un fichier CSV pour les présinscrits</h2>\r\n          <input\r\n            type=\"file\"\r\n            accept=\".txt\"\r\n            onChange={addPreinscrit}\r\n            className=\"border p-2 m-4\"\r\n          />\r\n        </section>\r\n\r\n        {/* Encadrés côte à côte */}\r\n        <div className=\"flex justify-between gap-6 mb-10\">\r\n          <section className=\"flex-1 bg-white p-6 rounded-md shadow-md\">\r\n            <h2 className=\"text-2xl font-semibold mb-4\">\r\n              Importer un fichier CSV\r\n            </h2>\r\n            <input\r\n              type=\"file\"\r\n              accept=\".csv\"\r\n              onChange={handleFileChange}\r\n              className=\"hidden\"\r\n              id=\"file-upload\"\r\n            />\r\n            <label\r\n              htmlFor=\"file-upload\"\r\n              className=\"cursor-pointer bg-blue-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-blue-700\"\r\n            >\r\n              Choisir un fichier\r\n            </label>\r\n          </section>\r\n\r\n          <section className=\"flex-1 bg-white p-6 rounded-md shadow-md\">\r\n            <h2 className=\"text-2xl font-semibold mb-4\">\r\n              Indiquer les redoublants\r\n            </h2>\r\n            <input\r\n              type=\"file\"\r\n              accept=\".csv\"\r\n              onChange={handleRedoublantsFileChange}\r\n              className=\"hidden\"\r\n              id=\"redoublants-upload\"\r\n            />\r\n            <label\r\n              htmlFor=\"redoublants-upload\"\r\n              className=\"cursor-pointer bg-green-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-green-700\"\r\n            >\r\n              Choisir un fichier\r\n            </label>\r\n          </section>\r\n        </div>\r\n\r\n        {/* Tableaux en grille */}\r\n        <div className=\"grid grid-cols-3 gap-6\">\r\n          {classes.map((classItem, classIndex) => (\r\n            <div key={classIndex} className=\"bg-white p-4 rounded-md shadow-md\">\r\n              <h3 className=\"text-xl font-bold mb-2\">{classItem.classe}</h3>\r\n              {classItem.students.length > 0 ? (\r\n                <table className=\"w-full border-collapse border border-gray-400\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\r\n                        Nom\r\n                      </th>\r\n                      <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\r\n                        Prénom\r\n                      </th>\r\n                      <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\r\n                        Date de naissance\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {classItem.students.map((student, studentIndex) => (\r\n                      <tr key={studentIndex}>\r\n                        <td className=\"border border-gray-300 px-4 py-2\">\r\n                          {student.nom}\r\n                        </td>\r\n                        <td className=\"border border-gray-300 px-4 py-2\">\r\n                          {student.prenom}\r\n                        </td>\r\n                        <td className=\"border border-gray-300 px-4 py-2\">\r\n                          {student.dateDeNaissance}\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              ) : (\r\n                <p>Aucun étudiant dans cette classe.</p>\r\n              )}\r\n            </div>\r\n          ))}\r\n\r\n          {/* Ajoutez un tableau pour les préinscrits */}\r\n          <div className=\"bg-white p-4 rounded-md shadow-md\">\r\n            <h3 className=\"text-xl font-bold mb-2\">Préinscrits</h3>\r\n            {preinscrits.length > 0 ? (\r\n              <table className=\"w-full border-collapse border border-gray-400\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\r\n                      Nom\r\n                    </th>\r\n                    <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\r\n                      Prénom\r\n                    </th>\r\n                    <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\r\n                      Date de naissance\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {preinscrits.map((student, index) => (\r\n                    <tr key={index}>\r\n                      <td className=\"border border-gray-300 px-4 py-2\">\r\n                        {student.nom}\r\n                      </td>\r\n                      <td className=\"border border-gray-300 px-4 py-2\">\r\n                        {student.prenom}\r\n                      </td>\r\n                      <td className=\"border border-gray-300 px-4 py-2\">\r\n                        {student.dateDeNaissance}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            ) : (\r\n              <p>Aucun préinscrit pour le moment.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,WAAW;AAC5B,SAASC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACdqB,YAAY,CAAC,CAAC;IACdC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,aAAa,GAAIC,CAAC,IAAK;IAC3B,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACtCP,iBAAiB,CAACK,YAAY,CAAC;IAC/BG,uBAAuB,CAACH,YAAY,CAAC;EACvC,CAAC;EAED,MAAMG,uBAAuB,GAAG,MAAOnB,IAAI,IAAK;IAC9C,MAAMoB,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAE/BD,MAAM,CAACE,MAAM,GAAG,MAAOP,CAAC,IAAK;MAC3B,MAAMQ,WAAW,GAAGR,CAAC,CAACE,MAAM,CAACO,MAAM,CAAC,CAAC;;MAErC,IAAI;QACF;QACA,MAAMC,UAAU,GAAGjC,IAAI,CAACC,KAAK,CAAC8B,WAAW,EAAE;UAAEG,MAAM,EAAE,IAAI;UAAEC,cAAc,EAAE;QAAK,CAAC,CAAC,CAACvB,IAAI;QACvF,MAAMwB,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;UACpEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB,CAAE;UACtC,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAE1B,WAAW,EAAEiB;UAAW,CAAC,CAAC,CAAE;QACrD,CAAC,CAAC;QAEF,IAAIG,QAAQ,CAACO,EAAE,EAAE;UACfC,KAAK,CAAC,sCAAsC,CAAC;QAC/C,CAAC,MAAM;UACL,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;UACvCF,KAAK,CAAC,YAAYC,SAAS,CAACE,OAAO,EAAE,CAAC;QACxC;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDJ,KAAK,CAAC,0BAA0B,CAAC;MACnC;IACF,CAAC;IAEDhB,MAAM,CAACsB,UAAU,CAAC1C,IAAI,CAAC,CAAC,CAAC;EAC7B,CAAC;;EAKC;EACA,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;MACjE,IAAID,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMQ,SAAS,GAAG,MAAMf,QAAQ,CAACU,IAAI,CAAC,CAAC;;QAEvC;QACA,MAAMM,KAAK,GAAG,CACZ,gBAAgB,EAChB,iBAAiB,EACjB,gBAAgB,EAChB,IAAI,EACJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;QAED,MAAMC,aAAa,GAAGF,SAAS,CAACG,IAAI,CAClC,CAACC,CAAC,EAAEC,CAAC,KAAKJ,KAAK,CAACK,OAAO,CAACF,CAAC,CAACG,MAAM,CAAC,GAAGN,KAAK,CAACK,OAAO,CAACD,CAAC,CAACE,MAAM,CAC5D,CAAC;QACD3C,UAAU,CAACsC,aAAa,CAAC;MAC3B,CAAC,MAAM;QACLJ,OAAO,CAACD,KAAK,CAAC,4CAA4C,CAAC;MAC7D;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAClE;EACF,CAAC;;EAED;EACA,MAAM3B,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC;MACrE,IAAID,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMgB,eAAe,GAAG,MAAMvB,QAAQ,CAACU,IAAI,CAAC,CAAC;QAC7C7B,cAAc,CAAC0C,eAAe,CAAC;MACjC,CAAC,MAAM;QACLV,OAAO,CAACD,KAAK,CAAC,gDAAgD,CAAC;MACjE;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;;EAED;EACA,MAAMY,gBAAgB,GAAIrC,CAAC,IAAK;IAC9B,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACtCjB,OAAO,CAACe,YAAY,CAAC;IAErB,IAAIA,YAAY,EAAE;MAChBxB,IAAI,CAACC,KAAK,CAACuB,YAAY,EAAE;QACvBqC,QAAQ,EAAG7B,MAAM,IAAK;UACpB,MAAM8B,aAAa,GAAG9B,MAAM,CAACpB,IAAI,CAACmD,GAAG,CAAEC,GAAG,IAAK;YAAA,IAAAC,mBAAA,EAAAC,QAAA,EAAAC,WAAA;YAC7C,MAAMC,OAAO,IAAAH,mBAAA,GAAGD,GAAG,CAAC,mBAAmB,CAAC,cAAAC,mBAAA,uBAAxBA,mBAAA,CAA0BI,IAAI,CAAC,CAAC;;YAEhD;YACA,IAAIC,eAAe,GAAG,IAAI;YAC1B,IAAI;cACF,MAAMC,UAAU,GAAGtE,KAAK,CAACmE,OAAO,EAAE,YAAY,EAAE,IAAII,IAAI,CAAC,CAAC,CAAC;cAC3D,IAAItE,OAAO,CAACqE,UAAU,CAAC,EAAE;gBACvBD,eAAe,GAAGnE,MAAM,CAACoE,UAAU,EAAE,YAAY,CAAC;cACpD;YACF,CAAC,CAAC,OAAOvB,KAAK,EAAE;cACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEoB,OAAO,EAAEpB,KAAK,CAAC;YAC7D;YAEA,OAAO;cACLyB,GAAG,GAAAP,QAAA,GAAEF,GAAG,CAAC,KAAK,CAAC,cAAAE,QAAA,uBAAVA,QAAA,CAAYG,IAAI,CAAC,CAAC;cACvBK,MAAM,GAAAP,WAAA,GAAEH,GAAG,CAAC,QAAQ,CAAC,cAAAG,WAAA,uBAAbA,WAAA,CAAeE,IAAI,CAAC,CAAC;cAC7BC,eAAe,EAAEA,eAAe,CAAE;YACpC,CAAC;UACH,CAAC,CAAC;UAEFzD,OAAO,CAACiD,aAAa,CAAC;UACtBa,iBAAiB,CAACb,aAAa,CAAC,CAAC,CAAC;QACpC,CAAC;QACD5B,MAAM,EAAE,IAAI;QACZC,cAAc,EAAE;MAClB,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAMyC,2BAA2B,GAAIrD,CAAC,IAAK;IACzC,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACtCf,kBAAkB,CAACa,YAAY,CAAC;IAEhC,IAAIA,YAAY,EAAE;MAChBxB,IAAI,CAACC,KAAK,CAACuB,YAAY,EAAE;QACvBqC,QAAQ,EAAG7B,MAAM,IAAK;UACpB,MAAM8B,aAAa,GAAG9B,MAAM,CAACpB,IAAI,CAACmD,GAAG,CAAEC,GAAG,IAAK;YAAA,IAAAa,oBAAA,EAAAC,SAAA,EAAAC,YAAA;YAC7C,MAAMX,OAAO,IAAAS,oBAAA,GAAGb,GAAG,CAAC,mBAAmB,CAAC,cAAAa,oBAAA,uBAAxBA,oBAAA,CAA0BR,IAAI,CAAC,CAAC;YAEhD,IAAIC,eAAe,GAAG,IAAI;YAC1B,IAAI;cACF,MAAMC,UAAU,GAAGtE,KAAK,CAACmE,OAAO,EAAE,YAAY,EAAE,IAAII,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;cAC7D,IAAItE,OAAO,CAACqE,UAAU,CAAC,EAAE;gBACvBD,eAAe,GAAGnE,MAAM,CAACoE,UAAU,EAAE,YAAY,CAAC;cACpD,CAAC,MAAM;gBACLtB,OAAO,CAACD,KAAK,CAAC,4BAA4BoB,OAAO,EAAE,CAAC;cACtD;YACF,CAAC,CAAC,OAAOpB,KAAK,EAAE;cACdC,OAAO,CAACD,KAAK,CACX,qCAAqC,EACrCoB,OAAO,EACPpB,KACF,CAAC;YACH;YAEA,OAAO;cACLyB,GAAG,GAAAK,SAAA,GAAEd,GAAG,CAAC,KAAK,CAAC,cAAAc,SAAA,uBAAVA,SAAA,CAAYT,IAAI,CAAC,CAAC;cACvBK,MAAM,GAAAK,YAAA,GAAEf,GAAG,CAAC,QAAQ,CAAC,cAAAe,YAAA,uBAAbA,YAAA,CAAeV,IAAI,CAAC,CAAC;cAC7BC,eAAe,EAAEA,eAAe,CAAE;YACpC,CAAC;UACH,CAAC,CAAC;UAEFU,wBAAwB,CAAClB,aAAa,CAAC,CAAC,CAAC;QAC3C,CAAC;QACD5B,MAAM,EAAE,IAAI;QACZC,cAAc,EAAE;MAClB,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAMwC,iBAAiB,GAAG,MAAOM,QAAQ,IAAK;IAC5C,IAAI;MACF,MAAM7C,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QACjEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEuC;QAAS,CAAC;MACnC,CAAC,CAAC;MAEF,IAAI7C,QAAQ,CAACO,EAAE,EAAE;QACfC,KAAK,CAAC,iCAAiC,CAAC;QACxC,MAAMxB,YAAY,CAAC,CAAC;MACtB,CAAC,MAAM;QACL,MAAMyB,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACvCF,KAAK,CAAC,YAAYC,SAAS,CAACE,OAAO,EAAE,CAAC;MACxC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDJ,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF,CAAC;;EAED;EACA,MAAMsC,4BAA4B,GAAG,MAAO1D,YAAY,IAAK;IAC3D,MAAM2D,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE7D,YAAY,CAAC;IAE5C,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdE,IAAI,EAAE2C;MACR,CAAC,CAAC;MAEF,IAAI/C,QAAQ,CAACO,EAAE,EAAE;QACfC,KAAK,CAAC,6DAA6D,CAAC;MACtE,CAAC,MAAM;QACL,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACvCF,KAAK,CAAC,YAAYC,SAAS,CAACE,OAAO,EAAE,CAAC;MACxC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDJ,KAAK,CAAC,wDAAwD,CAAC;IACjE;EACF,CAAC;;EAED;EACA,MAAMoC,wBAAwB,GAAG,MAAOM,WAAW,IAAK;IACtD,IAAI;MACF,MAAMlD,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gDAAgD,EAChD;QACEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE4C;QAAY,CAAC,CAAC,CAAE;MACzC,CACF,CAAC;MAED,IAAIlD,QAAQ,CAACO,EAAE,EAAE;QACfC,KAAK,CAAC,kCAAkC,CAAC;QACzC,MAAMxB,YAAY,CAAC,CAAC;MACtB,CAAC,MAAM;QACL,MAAMyB,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACvCF,KAAK,CAAC,YAAYC,SAAS,CAACE,OAAO,EAAE,CAAC;MACxC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvDJ,KAAK,CAAC,6DAA6D,CAAC;IACtE;EACF,CAAC;EAED,oBACEvC,OAAA;IAAKkF,SAAS,EAAC,gCAAgC;IAAAC,QAAA,gBAC7CnF,OAAA;MAAQkF,SAAS,EAAC,6DAA6D;MAAAC,QAAA,gBAC7EnF,OAAA;QAAIkF,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1DvF,OAAA;QAAGkF,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAE5B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAETvF,OAAA;MAAMkF,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBAEvCnF,OAAA;QAAAmF,QAAA,gBACEnF,OAAA;UAAAmF,QAAA,EAAI;QAA6C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtDvF,OAAA;UACEwF,IAAI,EAAC,MAAM;UACXC,MAAM,EAAC,MAAM;UACbC,QAAQ,EAAEzE,aAAc;UACxBiE,SAAS,EAAC;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eAGVvF,OAAA;QAAKkF,SAAS,EAAC,kCAAkC;QAAAC,QAAA,gBAC/CnF,OAAA;UAASkF,SAAS,EAAC,0CAA0C;UAAAC,QAAA,gBAC3DnF,OAAA;YAAIkF,SAAS,EAAC,6BAA6B;YAAAC,QAAA,EAAC;UAE5C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACLvF,OAAA;YACEwF,IAAI,EAAC,MAAM;YACXC,MAAM,EAAC,MAAM;YACbC,QAAQ,EAAEnC,gBAAiB;YAC3B2B,SAAS,EAAC,QAAQ;YAClBS,EAAE,EAAC;UAAa;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC,eACFvF,OAAA;YACE4F,OAAO,EAAC,aAAa;YACrBV,SAAS,EAAC,oGAAoG;YAAAC,QAAA,EAC/G;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAEVvF,OAAA;UAASkF,SAAS,EAAC,0CAA0C;UAAAC,QAAA,gBAC3DnF,OAAA;YAAIkF,SAAS,EAAC,6BAA6B;YAAAC,QAAA,EAAC;UAE5C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACLvF,OAAA;YACEwF,IAAI,EAAC,MAAM;YACXC,MAAM,EAAC,MAAM;YACbC,QAAQ,EAAEnB,2BAA4B;YACtCW,SAAS,EAAC,QAAQ;YAClBS,EAAE,EAAC;UAAoB;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,eACFvF,OAAA;YACE4F,OAAO,EAAC,oBAAoB;YAC5BV,SAAS,EAAC,sGAAsG;YAAAC,QAAA,EACjH;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eAGNvF,OAAA;QAAKkF,SAAS,EAAC,wBAAwB;QAAAC,QAAA,GACpC1E,OAAO,CAACiD,GAAG,CAAC,CAACmC,SAAS,EAAEC,UAAU,kBACjC9F,OAAA;UAAsBkF,SAAS,EAAC,mCAAmC;UAAAC,QAAA,gBACjEnF,OAAA;YAAIkF,SAAS,EAAC,wBAAwB;YAAAC,QAAA,EAAEU,SAAS,CAACxC;UAAM;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAC7DM,SAAS,CAACjB,QAAQ,CAACmB,MAAM,GAAG,CAAC,gBAC5B/F,OAAA;YAAOkF,SAAS,EAAC,+CAA+C;YAAAC,QAAA,gBAC9DnF,OAAA;cAAAmF,QAAA,eACEnF,OAAA;gBAAAmF,QAAA,gBACEnF,OAAA;kBAAIkF,SAAS,EAAC,8CAA8C;kBAAAC,QAAA,EAAC;gBAE7D;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACLvF,OAAA;kBAAIkF,SAAS,EAAC,8CAA8C;kBAAAC,QAAA,EAAC;gBAE7D;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACLvF,OAAA;kBAAIkF,SAAS,EAAC,8CAA8C;kBAAAC,QAAA,EAAC;gBAE7D;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACRvF,OAAA;cAAAmF,QAAA,EACGU,SAAS,CAACjB,QAAQ,CAAClB,GAAG,CAAC,CAACsC,OAAO,EAAEC,YAAY,kBAC5CjG,OAAA;gBAAAmF,QAAA,gBACEnF,OAAA;kBAAIkF,SAAS,EAAC,kCAAkC;kBAAAC,QAAA,EAC7Ca,OAAO,CAAC5B;gBAAG;kBAAAgB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV,CAAC,eACLvF,OAAA;kBAAIkF,SAAS,EAAC,kCAAkC;kBAAAC,QAAA,EAC7Ca,OAAO,CAAC3B;gBAAM;kBAAAe,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACb,CAAC,eACLvF,OAAA;kBAAIkF,SAAS,EAAC,kCAAkC;kBAAAC,QAAA,EAC7Ca,OAAO,CAAC/B;gBAAe;kBAAAmB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtB,CAAC;cAAA,GATEU,YAAY;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAUjB,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,gBAERvF,OAAA;YAAAmF,QAAA,EAAG;UAAiC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACxC;QAAA,GAnCOO,UAAU;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAoCf,CACN,CAAC,eAGFvF,OAAA;UAAKkF,SAAS,EAAC,mCAAmC;UAAAC,QAAA,gBAChDnF,OAAA;YAAIkF,SAAS,EAAC,wBAAwB;YAAAC,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACtD5E,WAAW,CAACoF,MAAM,GAAG,CAAC,gBACrB/F,OAAA;YAAOkF,SAAS,EAAC,+CAA+C;YAAAC,QAAA,gBAC9DnF,OAAA;cAAAmF,QAAA,eACEnF,OAAA;gBAAAmF,QAAA,gBACEnF,OAAA;kBAAIkF,SAAS,EAAC,8CAA8C;kBAAAC,QAAA,EAAC;gBAE7D;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACLvF,OAAA;kBAAIkF,SAAS,EAAC,8CAA8C;kBAAAC,QAAA,EAAC;gBAE7D;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACLvF,OAAA;kBAAIkF,SAAS,EAAC,8CAA8C;kBAAAC,QAAA,EAAC;gBAE7D;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACRvF,OAAA;cAAAmF,QAAA,EACGxE,WAAW,CAAC+C,GAAG,CAAC,CAACsC,OAAO,EAAEE,KAAK,kBAC9BlG,OAAA;gBAAAmF,QAAA,gBACEnF,OAAA;kBAAIkF,SAAS,EAAC,kCAAkC;kBAAAC,QAAA,EAC7Ca,OAAO,CAAC5B;gBAAG;kBAAAgB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV,CAAC,eACLvF,OAAA;kBAAIkF,SAAS,EAAC,kCAAkC;kBAAAC,QAAA,EAC7Ca,OAAO,CAAC3B;gBAAM;kBAAAe,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACb,CAAC,eACLvF,OAAA;kBAAIkF,SAAS,EAAC,kCAAkC;kBAAAC,QAAA,EAC7Ca,OAAO,CAAC/B;gBAAe;kBAAAmB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtB,CAAC;cAAA,GATEW,KAAK;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAUV,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,gBAERvF,OAAA;YAAAmF,QAAA,EAAG;UAAgC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACvC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACrF,EAAA,CAhZQD,GAAG;AAAAkG,EAAA,GAAHlG,GAAG;AAkZZ,eAAeA,GAAG;AAAC,IAAAkG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}