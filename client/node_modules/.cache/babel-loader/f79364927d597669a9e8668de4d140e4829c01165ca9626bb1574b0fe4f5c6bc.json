{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\4DEVS\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport { parse, isValid, format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [redoublantsFile, setRedoublantsFile] = useState(null); // Nouveau fichier pour les redoublants\n  const [data, setData] = useState([]);\n  const [classes, setClasses] = useState([]);\n  useEffect(() => {\n    fetchClasses();\n  }, []);\n\n  // Récupération des classes du backend\n  const fetchClasses = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/classes\");\n      if (response.ok) {\n        const classData = await response.json();\n        setClasses(classData);\n      } else {\n        console.error(\"Erreur lors de la récupération des classes\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion au serveur :\", error);\n    }\n  };\n\n  // Gestion du fichier des élèves\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    if (selectedFile) {\n      Papa.parse(selectedFile, {\n        complete: result => {\n          const formattedData = result.data.map(row => {\n            var _row$DateDeNaissanc, _row$Nom, _row$Prenom;\n            const rawDate = (_row$DateDeNaissanc = row[\"Date de naissance\"]) === null || _row$DateDeNaissanc === void 0 ? void 0 : _row$DateDeNaissanc.trim();\n\n            // Conversion de la date avec `date-fns`\n            let dateDeNaissance = null;\n            try {\n              const parsedDate = parse(rawDate, \"dd/MM/yyyy\", new Date());\n              if (isValid(parsedDate)) {\n                dateDeNaissance = format(parsedDate, \"yyyy-MM-dd\");\n              }\n            } catch (error) {\n              console.error(\"Erreur de format de date :\", rawDate, error);\n            }\n            return {\n              nom: (_row$Nom = row[\"Nom\"]) === null || _row$Nom === void 0 ? void 0 : _row$Nom.trim(),\n              prenom: (_row$Prenom = row[\"Prenom\"]) === null || _row$Prenom === void 0 ? void 0 : _row$Prenom.trim(),\n              dateDeNaissance: dateDeNaissance // Format correct ou null\n            };\n          });\n          setData(formattedData);\n          sendDataToBackend(formattedData); // Envoi des données transformées\n        },\n        header: true,\n        skipEmptyLines: true\n      });\n    }\n  };\n\n  // Gestion du fichier des redoublants\n  const handleRedoublantsFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setRedoublantsFile(selectedFile);\n    if (selectedFile) {\n      Papa.parse(selectedFile, {\n        complete: result => {\n          const formattedData = result.data.map(row => {\n            var _row$DateDeNaissanc2, _row$Nom2, _row$Prenom2;\n            const rawDate = (_row$DateDeNaissanc2 = row[\"Date de naissance\"]) === null || _row$DateDeNaissanc2 === void 0 ? void 0 : _row$DateDeNaissanc2.trim();\n            let dateDeNaissance = null;\n            try {\n              const parsedDate = parse(rawDate, \"dd/MM/yyyy\", new Date()); // Remplacez par le format de vos données\n              if (isValid(parsedDate)) {\n                dateDeNaissance = format(parsedDate, \"yyyy-MM-dd\");\n              } else {\n                console.error(`Date invalide détectée : ${rawDate}`);\n              }\n            } catch (error) {\n              console.error(\"Erreur lors du parsing de la date :\", rawDate, error);\n            }\n            return {\n              nom: (_row$Nom2 = row[\"Nom\"]) === null || _row$Nom2 === void 0 ? void 0 : _row$Nom2.trim(),\n              prenom: (_row$Prenom2 = row[\"Prenom\"]) === null || _row$Prenom2 === void 0 ? void 0 : _row$Prenom2.trim(),\n              dateDeNaissance: dateDeNaissance // Null si invalide\n            };\n          });\n          sendRedoublantsToBackend(formattedData); // Envoyer uniquement les données valides\n        },\n        header: true,\n        skipEmptyLines: true\n      });\n    }\n  };\n\n  // Envoi des données des élèves au backend\n  const sendDataToBackend = async students => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/students\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          students\n        })\n      });\n      if (response.ok) {\n        alert(\"Les élèves ont été enregistrés.\");\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi au serveur:\", error);\n      alert(\"Une erreur est survenue.\");\n    }\n  };\n\n  // Fonction pour envoyer le fichier à Multer (backend)\n  const sendRedoublantsFileToBackend = async selectedFile => {\n    const formData = new FormData();\n    formData.append(\"redoublants\", selectedFile);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/update-year\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        alert(\"Les redoublants ont été enregistrés et l'année mise à jour.\");\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi au serveur:\", error);\n      alert(\"Une erreur est survenue dans la route api/update-year.\");\n    }\n  };\n\n  // Envoi des données formatées des redoublants au backend\n  const sendRedoublantsToBackend = async redoublants => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/validate-redoublants\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          redoublants\n        }) // Conversion en JSON avant l'envoi\n      });\n      if (response.ok) {\n        alert(\"Les redoublants ont été validés.\");\n      } else {\n        const errorData = await response.json();\n        alert(`Erreur : ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur d'envoi des redoublants:\", error);\n      alert(\"Une erreur est survenue avec la route validate-redoublants.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 py-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-blue-600 text-white p-6 text-center rounded-md shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"Gestion des \\xC9l\\xE8ves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm mt-2\",\n        children: \"Importez et g\\xE9rez les donn\\xE9es de vos \\xE9l\\xE8ves.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"mt-10 max-w-4xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"bg-white p-6 rounded-md shadow-md mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"Importer un fichier CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: handleFileChange,\n            className: \"hidden\" // Masquer le champ file par défaut\n            ,\n            id: \"file-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            className: \"cursor-pointer bg-blue-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-blue-700\",\n            children: \"Choisir un fichier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"bg-white p-6 rounded-md shadow-md mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"Indiquer les redoublants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: handleRedoublantsFileChange,\n            className: \"hidden\" // Masquer le champ file par défaut\n            ,\n            id: \"redoublants-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"redoublants-upload\",\n            className: \"cursor-pointer bg-green-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-green-700\",\n            children: \"Choisir un fichier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), classes.length > 0 ? classes.map((classItem, classIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-2\",\n          children: classItem.classe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this), classItem.students.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full border-collapse border border-gray-400\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                children: \"Nom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                children: \"Pr\\xE9nom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-300 px-4 py-2 bg-gray-100\",\n                children: \"Date de naissance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: classItem.students.map((student, studentIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-300 px-4 py-2\",\n                children: student.nom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-300 px-4 py-2\",\n                children: student.prenom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-300 px-4 py-2\",\n                children: student.dateDeNaissance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 25\n              }, this)]\n            }, studentIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Aucun \\xE9tudiant dans cette classe.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 17\n        }, this)]\n      }, classIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucune classe disponible.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K57LhZsFUmKc6QsBWegcj+LVpFc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Papa","parse","isValid","format","jsxDEV","_jsxDEV","App","_s","file","setFile","redoublantsFile","setRedoublantsFile","data","setData","classes","setClasses","fetchClasses","response","fetch","ok","classData","json","console","error","handleFileChange","e","selectedFile","target","files","complete","result","formattedData","map","row","_row$DateDeNaissanc","_row$Nom","_row$Prenom","rawDate","trim","dateDeNaissance","parsedDate","Date","nom","prenom","sendDataToBackend","header","skipEmptyLines","handleRedoublantsFileChange","_row$DateDeNaissanc2","_row$Nom2","_row$Prenom2","sendRedoublantsToBackend","students","method","headers","body","JSON","stringify","alert","errorData","message","sendRedoublantsFileToBackend","formData","FormData","append","redoublants","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","id","htmlFor","length","classItem","classIndex","classe","student","studentIndex","_c","$RefreshReg$"],"sources":["C:/code/4DEVS/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport { parse, isValid, format } from \"date-fns\";\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [redoublantsFile, setRedoublantsFile] = useState(null); // Nouveau fichier pour les redoublants\r\n  const [data, setData] = useState([]);\r\n  const [classes, setClasses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchClasses();\r\n  }, []);\r\n\r\n  // Récupération des classes du backend\r\n  const fetchClasses = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/classes\");\r\n      if (response.ok) {\r\n        const classData = await response.json();\r\n        setClasses(classData);\r\n      } else {\r\n        console.error(\"Erreur lors de la récupération des classes\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la connexion au serveur :\", error);\r\n    }\r\n  };\r\n\r\n  // Gestion du fichier des élèves\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    setFile(selectedFile);\r\n\r\n    if (selectedFile) {\r\n      Papa.parse(selectedFile, {\r\n        complete: (result) => {\r\n          const formattedData = result.data.map((row) => {\r\n            const rawDate = row[\"Date de naissance\"]?.trim();\r\n\r\n            // Conversion de la date avec `date-fns`\r\n            let dateDeNaissance = null;\r\n            try {\r\n              const parsedDate = parse(rawDate, \"dd/MM/yyyy\", new Date());\r\n              if (isValid(parsedDate)) {\r\n                dateDeNaissance = format(parsedDate, \"yyyy-MM-dd\");\r\n              }\r\n            } catch (error) {\r\n              console.error(\"Erreur de format de date :\", rawDate, error);\r\n            }\r\n\r\n            return {\r\n              nom: row[\"Nom\"]?.trim(),\r\n              prenom: row[\"Prenom\"]?.trim(),\r\n              dateDeNaissance: dateDeNaissance, // Format correct ou null\r\n            };\r\n          });\r\n\r\n          setData(formattedData);\r\n          sendDataToBackend(formattedData); // Envoi des données transformées\r\n        },\r\n        header: true,\r\n        skipEmptyLines: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Gestion du fichier des redoublants\r\n  const handleRedoublantsFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    setRedoublantsFile(selectedFile);\r\n\r\n    if (selectedFile) {\r\n      Papa.parse(selectedFile, {\r\n        complete: (result) => {\r\n          const formattedData = result.data.map((row) => {\r\n            const rawDate = row[\"Date de naissance\"]?.trim();\r\n\r\n            let dateDeNaissance = null;\r\n            try {\r\n              const parsedDate = parse(rawDate, \"dd/MM/yyyy\", new Date()); // Remplacez par le format de vos données\r\n              if (isValid(parsedDate)) {\r\n                dateDeNaissance = format(parsedDate, \"yyyy-MM-dd\");\r\n              } else {\r\n                console.error(`Date invalide détectée : ${rawDate}`);\r\n              }\r\n            } catch (error) {\r\n              console.error(\r\n                \"Erreur lors du parsing de la date :\",\r\n                rawDate,\r\n                error\r\n              );\r\n            }\r\n\r\n            return {\r\n              nom: row[\"Nom\"]?.trim(),\r\n              prenom: row[\"Prenom\"]?.trim(),\r\n              dateDeNaissance: dateDeNaissance, // Null si invalide\r\n            };\r\n          });\r\n\r\n          sendRedoublantsToBackend(formattedData); // Envoyer uniquement les données valides\r\n        },\r\n        header: true,\r\n        skipEmptyLines: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Envoi des données des élèves au backend\r\n  const sendDataToBackend = async (students) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/students\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ students }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"Les élèves ont été enregistrés.\");\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(`Erreur : ${errorData.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur d'envoi au serveur:\", error);\r\n      alert(\"Une erreur est survenue.\");\r\n    }\r\n  };\r\n\r\n  // Fonction pour envoyer le fichier à Multer (backend)\r\n  const sendRedoublantsFileToBackend = async (selectedFile) => {\r\n    const formData = new FormData();\r\n    formData.append(\"redoublants\", selectedFile);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/update-year\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"Les redoublants ont été enregistrés et l'année mise à jour.\");\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(`Erreur : ${errorData.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur d'envoi au serveur:\", error);\r\n      alert(\"Une erreur est survenue dans la route api/update-year.\");\r\n    }\r\n  };\r\n\r\n  // Envoi des données formatées des redoublants au backend\r\n  const sendRedoublantsToBackend = async (redoublants) => {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:5000/api/validate-redoublants\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ redoublants }), // Conversion en JSON avant l'envoi\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        alert(\"Les redoublants ont été validés.\");\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(`Erreur : ${errorData.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur d'envoi des redoublants:\", error);\r\n      alert(\"Une erreur est survenue avec la route validate-redoublants.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 py-10\">\r\n      <header className=\"bg-blue-600 text-white p-6 text-center rounded-md shadow-md\">\r\n        <h1 className=\"text-3xl font-bold\">Gestion des Élèves</h1>\r\n        <p className=\"text-sm mt-2\">\r\n          Importez et gérez les données de vos élèves.\r\n        </p>\r\n      </header>\r\n\r\n      <main className=\"mt-10 max-w-4xl mx-auto\">\r\n        <section className=\"bg-white p-6 rounded-md shadow-md mb-6\">\r\n          <h2 className=\"text-2xl font-semibold mb-4\">\r\n            Importer un fichier CSV\r\n          </h2>\r\n          <label className=\"block\">\r\n            <input\r\n              type=\"file\"\r\n              accept=\".csv\"\r\n              onChange={handleFileChange}\r\n              className=\"hidden\" // Masquer le champ file par défaut\r\n              id=\"file-upload\"\r\n            />\r\n            <label\r\n              htmlFor=\"file-upload\"\r\n              className=\"cursor-pointer bg-blue-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-blue-700\"\r\n            >\r\n              Choisir un fichier\r\n            </label>\r\n          </label>\r\n        </section>\r\n\r\n        <section className=\"bg-white p-6 rounded-md shadow-md mb-6\">\r\n          <h2 className=\"text-2xl font-semibold mb-4\">\r\n            Indiquer les redoublants\r\n          </h2>\r\n          <label className=\"block\">\r\n            <input\r\n              type=\"file\"\r\n              accept=\".csv\"\r\n              onChange={handleRedoublantsFileChange}\r\n              className=\"hidden\" // Masquer le champ file par défaut\r\n              id=\"redoublants-upload\"\r\n            />\r\n            <label\r\n              htmlFor=\"redoublants-upload\"\r\n              className=\"cursor-pointer bg-green-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-green-700\"\r\n            >\r\n              Choisir un fichier\r\n            </label>\r\n          </label>\r\n        </section>\r\n\r\n        {classes.length > 0 ? (\r\n          classes.map((classItem, classIndex) => (\r\n            <div key={classIndex} className=\"mb-6\">\r\n              <h3 className=\"text-xl font-bold mb-2\">{classItem.classe}</h3>\r\n              {classItem.students.length > 0 ? (\r\n                <table className=\"w-full border-collapse border border-gray-400\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\r\n                        Nom\r\n                      </th>\r\n                      <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\r\n                        Prénom\r\n                      </th>\r\n                      <th className=\"border border-gray-300 px-4 py-2 bg-gray-100\">\r\n                        Date de naissance\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {classItem.students.map((student, studentIndex) => (\r\n                      <tr key={studentIndex}>\r\n                        <td className=\"border border-gray-300 px-4 py-2\">\r\n                          {student.nom}\r\n                        </td>\r\n                        <td className=\"border border-gray-300 px-4 py-2\">\r\n                          {student.prenom}\r\n                        </td>\r\n                        <td className=\"border border-gray-300 px-4 py-2\">\r\n                          {student.dateDeNaissance}\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              ) : (\r\n                <p>Aucun étudiant dans cette classe.</p>\r\n              )}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>Aucune classe disponible.</p>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}